/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import BUS.HoaDonBUS;
import Model.CTHOADON;
import Model.HOADON;
import Model.TESTPHANTRAM;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Quang Long
 */
public class HOADON_VIEW extends javax.swing.JPanel {

    DefaultTableModel tableModelHD, tableModelCTHD;
    TESTPHANTRAM pt = new TESTPHANTRAM();

    /**
     * Creates new form HOADON1
     */
    public HOADON_VIEW() {
        initComponents();
        tableModelHD = (DefaultTableModel) jtbHOADON.getModel();
        tableModelCTHD = (DefaultTableModel) jtbCTHD.getModel();
        showHOADON();
        showCTHD();

        jtfTIMKIEMNANGCAO.setEnabled(false);
        jtfTIMKIEMNANGCAO_CTHD.setEnabled(false);
        btnXOA.setEnabled(false);
        jtfTHANHTIEN.setEditable(false);
        jtfTONGTIEN.setEditable(false);
        jtfTONGTIEN.setText("0");
        jtfGIAMGIA.setEditable(false);
    }

    private void showHOADON() {

        HoaDonBUS hdBUS = new HoaDonBUS();
        HoaDonBUS.HDLIST = hdBUS.getAllHD();

        tableModelHD.setRowCount(0);

        for (HOADON hd : HoaDonBUS.HDLIST) {
            Vector<String> row = new Vector<>();
            row.add(hd.getMaHD());
            row.add(hd.getMaNV());
            row.add(hd.getMaKH());
            row.add(hd.getMaKM());
            row.add(hd.getNgayLapHD());
            row.add(String.valueOf(hd.getTongTien()));

            tableModelHD.addRow(row);
        }

        jtbHOADON.setModel(tableModelHD);
    }

    private void showCTHD() {

        HoaDonBUS hdBUS = new HoaDonBUS();
        HoaDonBUS.CTHDLIST = hdBUS.getAllCTHD();

        tableModelCTHD.setRowCount(0);

        for (CTHOADON cthd : HoaDonBUS.CTHDLIST) {
            Vector<String> row = new Vector<>();
            row.add(cthd.getMaHD());
            row.add(cthd.getMaSP());
            row.add(cthd.getTenSp());
            row.add(String.valueOf(cthd.getDonGia()));
            row.add(String.valueOf(cthd.getSoLuong()));
            row.add(cthd.getGiamGia());
            row.add(String.valueOf(cthd.getThanhTien()));

            tableModelCTHD.addRow(row);
        }

        jtbCTHD.setModel(tableModelCTHD);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jtfMAHD = new javax.swing.JTextField();
        jtfNGAYLAPHD = new javax.swing.JTextField();
        jtfTONGTIEN = new javax.swing.JTextField();
        jtfMAKH = new javax.swing.JTextField();
        jtfMANV = new javax.swing.JTextField();
        jtfMAKM = new javax.swing.JTextField();
        btnCHONKH = new javax.swing.JButton();
        btnCHONNV = new javax.swing.JButton();
        btnCHONKM = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jtfMASP = new javax.swing.JTextField();
        jtfTENSP = new javax.swing.JTextField();
        jtfDONGIA = new javax.swing.JTextField();
        jtfSOLUONG = new javax.swing.JTextField();
        jtfGIAMGIA = new javax.swing.JTextField();
        jtfTHANHTIEN = new javax.swing.JTextField();
        jtfMAHD_CT = new javax.swing.JTextField();
        btnCHONSP = new javax.swing.JButton();
        btnTHEM_HD = new javax.swing.JButton();
        btnXOA = new javax.swing.JButton();
        btnSUA = new javax.swing.JButton();
        btnRESET = new javax.swing.JButton();
        btnTHEM_CTHD = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtbHOADON = new javax.swing.JTable();
        jLabel23 = new javax.swing.JLabel();
        jcbTIMKIEM = new javax.swing.JComboBox<>();
        jtfTIMKIEM = new javax.swing.JTextField();
        jtfTIMKIEMNANGCAO = new javax.swing.JTextField();
        btnTIMKIEM = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtbCTHD = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        jcbTIMKIEMCT_HD = new javax.swing.JComboBox<>();
        jtfTIMKIEMCTHD = new javax.swing.JTextField();
        jtfTIMKIEMNANGCAO_CTHD = new javax.swing.JTextField();
        btnTIMKIEMCTHD = new javax.swing.JButton();

        setBackground(new java.awt.Color(210, 145, 188));
        setPreferredSize(new java.awt.Dimension(1200, 900));

        jPanel3.setBackground(new java.awt.Color(210, 145, 188));

        jPanel4.setBackground(new java.awt.Color(210, 145, 188));

        jPanel5.setBackground(new java.awt.Color(255, 200, 231));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setText("THÔNG TIN CHUNG");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel11.setText("ID Hóa đơn:");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel12.setText("ID Khách hàng:");

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel13.setText("ID Nhân viên:");

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel14.setText("Ngày lập HD:");

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel15.setText("Tổng tiền");

        jLabel26.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel26.setText("ID Khuyến mãi:");

        jtfTONGTIEN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfTONGTIENKeyPressed(evt);
            }
        });

        btnCHONKH.setText("...");
        btnCHONKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCHONKHActionPerformed(evt);
            }
        });

        btnCHONNV.setText("...");
        btnCHONNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCHONNVActionPerformed(evt);
            }
        });

        btnCHONKM.setText("...");
        btnCHONKM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCHONKMActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel14)
                            .addComponent(jLabel13)
                            .addComponent(jLabel11)
                            .addComponent(jLabel15))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jtfMANV, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                                    .addComponent(jtfMAKH, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfMAHD, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnCHONKH, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnCHONNV, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jtfTONGTIEN, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                                .addComponent(jtfNGAYLAPHD))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(228, 228, 228)
                                .addComponent(jLabel10))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel26)
                                .addGap(18, 18, 18)
                                .addComponent(jtfMAKM, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCHONKM, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(33, 33, 33))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jtfMAHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jtfMAKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCHONKH))
                .addGap(6, 6, 6)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jtfMANV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCHONNV))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(jtfMAKM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCHONKM))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jtfNGAYLAPHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jtfTONGTIEN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 200, 231));

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel16.setText("CHI TIẾT HÓA ĐƠN");

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel17.setText("ID Sản phẩm:");

        jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel18.setText("Tên sản phẩm:");

        jLabel19.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel19.setText("Đơn giá:");

        jLabel20.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel20.setText("Số lượng:");

        jLabel21.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel21.setText("Giảm giá:");

        jLabel22.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel22.setText("Thành tiền:");

        jLabel25.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel25.setText("ID Hóa đơn:");

        jtfSOLUONG.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfSOLUONGKeyPressed(evt);
            }
        });

        btnCHONSP.setText("...");
        btnCHONSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCHONSPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jtfTHANHTIEN, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
                                    .addComponent(jtfSOLUONG, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfDONGIA, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfTENSP, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfMASP)
                                    .addComponent(jtfGIAMGIA))
                                .addGap(5, 5, 5)
                                .addComponent(btnCHONSP, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtfMAHD_CT, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addComponent(jLabel16)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jtfMAHD_CT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jtfMASP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCHONSP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfTENSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfDONGIA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfSOLUONG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfGIAMGIA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfTHANHTIEN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        btnTHEM_HD.setBackground(new java.awt.Color(255, 200, 231));
        btnTHEM_HD.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        btnTHEM_HD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/plus-sign.png"))); // NOI18N
        btnTHEM_HD.setText("THÊM THÔNG TIN");
        btnTHEM_HD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTHEM_HDActionPerformed(evt);
            }
        });

        btnXOA.setBackground(new java.awt.Color(255, 200, 231));
        btnXOA.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        btnXOA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/delete-button.png"))); // NOI18N
        btnXOA.setText("XÓA");
        btnXOA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXOAActionPerformed(evt);
            }
        });

        btnSUA.setBackground(new java.awt.Color(255, 200, 231));
        btnSUA.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        btnSUA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/eraser.png"))); // NOI18N
        btnSUA.setText("SỬA");
        btnSUA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSUAActionPerformed(evt);
            }
        });

        btnRESET.setBackground(new java.awt.Color(255, 200, 231));
        btnRESET.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        btnRESET.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/reset.png"))); // NOI18N
        btnRESET.setText("RESET");
        btnRESET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRESETActionPerformed(evt);
            }
        });

        btnTHEM_CTHD.setBackground(new java.awt.Color(255, 200, 231));
        btnTHEM_CTHD.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        btnTHEM_CTHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/plus-sign.png"))); // NOI18N
        btnTHEM_CTHD.setText("THÊM CHI TIẾT");
        btnTHEM_CTHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTHEM_CTHDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addComponent(btnTHEM_HD)
                .addGap(62, 62, 62)
                .addComponent(btnXOA)
                .addGap(64, 64, 64)
                .addComponent(btnSUA)
                .addGap(64, 64, 64)
                .addComponent(btnRESET)
                .addGap(92, 92, 92)
                .addComponent(btnTHEM_CTHD)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(3, 3, 3)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRESET)
                    .addComponent(btnSUA)
                    .addComponent(btnXOA)
                    .addComponent(btnTHEM_HD)
                    .addComponent(btnTHEM_CTHD))
                .addGap(1, 1, 1))
        );

        jPanel7.setBackground(new java.awt.Color(254, 200, 216));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/bill.png"))); // NOI18N
        jLabel1.setText("QUẢN LÝ HÓA ĐƠN");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(428, 428, 428)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(255, 200, 231));

        jtbHOADON.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID HĐ", "ID NV", "ID KH", "ID KM", "Ngày lập", "Tổng tiền"
            }
        ));
        jtbHOADON.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbHOADONMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtbHOADON);

        jLabel23.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/file.png"))); // NOI18N
        jLabel23.setText("THÔNG TIN CHUNG");

        jcbTIMKIEM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mặc Định", "Mã Hóa Đơn", "Mã Nhân Viên", "Mã Khách Hàng", "Ngày Lập HD" }));
        jcbTIMKIEM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTIMKIEMActionPerformed(evt);
            }
        });

        jtfTIMKIEM.setText("Nhập dữ liệu tìm kiếm");
        jtfTIMKIEM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfTIMKIEMMouseClicked(evt);
            }
        });
        jtfTIMKIEM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfTIMKIEMActionPerformed(evt);
            }
        });

        jtfTIMKIEMNANGCAO.setText("Nhập dữ liệu tìm kiếm");
        jtfTIMKIEMNANGCAO.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfTIMKIEMNANGCAOMouseClicked(evt);
            }
        });
        jtfTIMKIEMNANGCAO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfTIMKIEMNANGCAOActionPerformed(evt);
            }
        });

        btnTIMKIEM.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnTIMKIEM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/web-search-engine.png"))); // NOI18N
        btnTIMKIEM.setText("TÌM KIẾM");
        btnTIMKIEM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTIMKIEMActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 161, Short.MAX_VALUE)
                .addComponent(jcbTIMKIEM, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfTIMKIEM, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfTIMKIEMNANGCAO, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(btnTIMKIEM)
                .addGap(185, 185, 185))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcbTIMKIEM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfTIMKIEM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfTIMKIEMNANGCAO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnTIMKIEM)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBackground(new java.awt.Color(255, 200, 231));

        jtbCTHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID HĐ", "ID SP", "Tên SP", "Đơn giá", "Số lượng", "Giảm giá", "Thành tiền"
            }
        ));
        jtbCTHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbCTHDMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jtbCTHD);

        jLabel24.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/file.png"))); // NOI18N
        jLabel24.setText("CHI TIẾT HÓA ĐƠN");

        jcbTIMKIEMCT_HD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mặc Định", "Mã HD", "Mã SP", "Đơn Giá" }));
        jcbTIMKIEMCT_HD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTIMKIEMCT_HDActionPerformed(evt);
            }
        });

        jtfTIMKIEMCTHD.setText("Nhập dữ liệu tìm kiếm");
        jtfTIMKIEMCTHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfTIMKIEMCTHDMouseClicked(evt);
            }
        });

        jtfTIMKIEMNANGCAO_CTHD.setText("Nhập dữ liệu tìm kiếm");
        jtfTIMKIEMNANGCAO_CTHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfTIMKIEMNANGCAO_CTHDMouseClicked(evt);
            }
        });

        btnTIMKIEMCTHD.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnTIMKIEMCTHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/web-search-engine.png"))); // NOI18N
        btnTIMKIEMCTHD.setText("TÌM KIẾM");
        btnTIMKIEMCTHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTIMKIEMCTHDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(jLabel24)
                .addGap(172, 172, 172)
                .addComponent(jcbTIMKIEMCT_HD, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfTIMKIEMNANGCAO_CTHD, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                    .addComponent(jtfTIMKIEMCTHD))
                .addGap(18, 18, 18)
                .addComponent(btnTIMKIEMCTHD)
                .addGap(189, 189, 189))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfTIMKIEMCTHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbTIMKIEMCT_HD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfTIMKIEMNANGCAO_CTHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnTIMKIEMCTHD))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1214, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(177, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnTHEM_HDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTHEM_HDActionPerformed
        HOADON hd = new HOADON();
        int ktra = 1;
        HoaDonBUS hdBUS = new HoaDonBUS();
        hd.setMaHD(jtfMAHD.getText().trim());
        if (jtfMAHD.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Lỗi không được để Mã HD trống", "Lôi", JOptionPane.ERROR_MESSAGE);
        } else {
            for (HOADON mahd : HoaDonBUS.HDLIST) {
                if (hd.getMaHD().equalsIgnoreCase(mahd.getMaHD())) {
                    ktra = 0;
                }
            }
            if (ktra == 1) {
                hd.setMaNV(jtfMANV.getText().trim());
                hd.setMaKH(jtfMAKH.getText().trim());
                hd.setMaKM(jtfMAKM.getText().trim());
                hd.setNgayLapHD(jtfNGAYLAPHD.getText().trim());
                hd.setTongTien(Double.valueOf(jtfTONGTIEN.getText().trim()));

                try {
                    int result_CTKM = hdBUS.insertHD(hd);
                    if (result_CTKM != 0) {
                        JOptionPane.showMessageDialog(this,
                                "Thêm dữ liệu thành công!", "Thông báo",
                                JOptionPane.INFORMATION_MESSAGE);
                    }
                    showHOADON();
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Mã HĐ đã bị trùng lặp do khởi tạo trước đó", "Lôi", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnTHEM_HDActionPerformed

    private void btnXOAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXOAActionPerformed
        HoaDonBUS hdBUS = new HoaDonBUS();
        int selectedIndex = jtbCTHD.getSelectedRow();
        if (selectedIndex >= 0) {
            CTHOADON std = HoaDonBUS.CTHDLIST.get(selectedIndex);

            int option = JOptionPane.showConfirmDialog(this, "Do you want to delete this item?");

            if (option == 0) {
                hdBUS.deleteCT_HD(std.getMaHD());

                showCTHD();
            }
        }

    }//GEN-LAST:event_btnXOAActionPerformed

    private void btnSUAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSUAActionPerformed
        int i = jtbHOADON.getSelectedRow();
        int j = jtbCTHD.getSelectedRow();
        int ktraHD = 1; //Gia tri dung, khong trung, duoc sua
        int ktraCTHD = 1;
        if (i >= 0 && j < 0) {
            HOADON hd = new HOADON();
            HOADON hdold = HoaDonBUS.HDLIST.set(i, hd);
            if (ktraHD == 1) {
                hd.setMaHD(jtfMAHD.getText());
                hd.setMaNV(jtfMANV.getText());
                hd.setMaKH(jtfMAKH.getText());
                hd.setMaKM(jtfMAKM.getText());
                hd.setNgayLapHD(jtfNGAYLAPHD.getText());
                hd.setTongTien(Double.valueOf(jtfTONGTIEN.getText()));

                HoaDonBUS hdBUS = new HoaDonBUS();
                int kt = hdBUS.updateHD(hd, hdold);
                if (kt != 0) {
                    /*tableModelCTKM.setValueAt(ctkmold.getMaKM(), i, 0);
                    tableModelCTKM.setValueAt(ctkm.getTenCTKM(), i, 1);
                    tableModelCTKM.setValueAt(ctkm.getNgayBD(), i, 2);
                    tableModelCTKM.setValueAt(ctkm.getNgayKT(), i, 3);
                    jtbCTKM.setModel(tableModelCTKM);*/
                    JOptionPane.showMessageDialog(null, "Sửa thành công chương trình khuyến mãi", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    showHOADON();
                } else {
                    JOptionPane.showMessageDialog(null, "Lỗi", "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else if (j >= 0 && i < 0) {
            CTHOADON cthd = new CTHOADON();
            CTHOADON cthdold = HoaDonBUS.CTHDLIST.set(j, cthd);
            if (ktraCTHD == 1) {
                cthd.setMaHD(jtfMAHD_CT.getText());
                cthd.setMaSP(jtfMASP.getText());
                cthd.setTenSp(jtfTENSP.getText());
                cthd.setDonGia(Double.valueOf(jtfDONGIA.getText()));
                cthd.setSoLuong(Integer.valueOf(jtfSOLUONG.getText()));
                cthd.setGiamGia(jtfGIAMGIA.getText());
                cthd.setThanhTien(Double.valueOf(jtfTHANHTIEN.getText()));

                HoaDonBUS hdBUS = new HoaDonBUS();
                int kt = hdBUS.updateCTHD(cthd, cthdold);
                if (kt != 0) {
                    tableModelCTHD.setValueAt(cthdold.getMaHD(), j, 0);
                    tableModelCTHD.setValueAt(cthd.getMaSP(), j, 1);
                    tableModelCTHD.setValueAt(cthd.getTenSp(), j, 2);
                    tableModelCTHD.setValueAt(cthd.getDonGia(), j, 3);
                    tableModelCTHD.setValueAt(cthd.getSoLuong(), j, 4);
                    tableModelCTHD.setValueAt(cthd.getGiamGia(), j, 5);
                    tableModelCTHD.setValueAt(cthd.getThanhTien(), j, 6);

                    jtbCTHD.setModel(tableModelCTHD);
                    showCTHD();
                    JOptionPane.showMessageDialog(null, "Sửa thành công chi tiết hóa đơn", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Lỗi", "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
            }
            //JOptionPane.showMessageDialog(null, "Không được sửa thông tin chi tiết khuyến mãi","Lỗi",JOptionPane.ERROR_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Vui lòng chỉ chọn sửa 1 bảng trong 1 lần thực hiện", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSUAActionPerformed

    private void btnRESETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRESETActionPerformed
        jtfDONGIA.setText("");
        jtfGIAMGIA.setText("");
        jtfMAHD.setText("");
        jtfMAHD_CT.setText("");
        jtfMAKH.setText("");
        jtfMAKM.setText("");
        jtfMANV.setText("");
        jtfMASP.setText("");
        jtfNGAYLAPHD.setText("");
        jtfSOLUONG.setText("");
        jtfTENSP.setText("");
        jtfTHANHTIEN.setText("");
        jtfTONGTIEN.setText("");
        jtfDONGIA.setText("");
    }//GEN-LAST:event_btnRESETActionPerformed

    private void btnTHEM_CTHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTHEM_CTHDActionPerformed
        int ktra = 1;
        int ktraHD = 1;
        int ktraMaHD_tontai_HD = 0;
        int i = 0;
        int j = jtbHOADON.getSelectedRow();

        CTHOADON cthd = new CTHOADON();
        HoaDonBUS hdBUS = new HoaDonBUS();
        HOADON update_hd_tongtien = new HOADON();

        cthd.setMaHD(jtfMAHD_CT.getText().trim());

        if (jtfMAHD_CT.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Lỗi không được để Mã HD chi tiết trống", "Lôi", JOptionPane.ERROR_MESSAGE);
        } else {
            for (CTHOADON ct : HoaDonBUS.CTHDLIST) {
                if (cthd.getMaHD().equalsIgnoreCase(ct.getMaHD()) && cthd.getMaSP().equalsIgnoreCase(ct.getMaSP())) {
                    ktra = 0;
                }
            }
            if (ktra == 1) {
                for (HOADON hd_kt : HoaDonBUS.HDLIST) {
                    if (cthd.getMaHD().equalsIgnoreCase(hd_kt.getMaHD())) {
                        ktraMaHD_tontai_HD = 1;
                    }
                }
                if (ktraMaHD_tontai_HD == 1) {
                    cthd.setMaSP(jtfMASP.getText().trim());
                    cthd.setTenSp(jtfTENSP.getText().trim());
                    cthd.setDonGia(Double.valueOf(jtfDONGIA.getText().trim()));
                    cthd.setSoLuong(Integer.valueOf(jtfSOLUONG.getText().trim()));
                    cthd.setGiamGia(jtfGIAMGIA.getText().trim());
                    cthd.setThanhTien(Double.valueOf(jtfTHANHTIEN.getText().trim()));
                    try {
                        int result_CTHD = hdBUS.insertCT_HD(cthd);
                        if (result_CTHD != 0) {
                            JOptionPane.showMessageDialog(this,
                                    "Thêm dữ liệu thành công!", "Thông báo",
                                    JOptionPane.INFORMATION_MESSAGE);
                        }
                        showCTHD();
                        //showHOADON();
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Mã HD này không tồn tại để khởi tạo", "Lôi", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Mã HD và MÃ SP đã bị trùng lặp do khởi tạo trước đó\n Vui lòng sửa!", "Lôi", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnTHEM_CTHDActionPerformed

    private void jtfTIMKIEMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfTIMKIEMMouseClicked
        jtfTIMKIEM.setText("");
    }//GEN-LAST:event_jtfTIMKIEMMouseClicked

    private void jtfTIMKIEMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfTIMKIEMActionPerformed

    }//GEN-LAST:event_jtfTIMKIEMActionPerformed

    private void jtfTIMKIEMNANGCAOMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfTIMKIEMNANGCAOMouseClicked
        jtfTIMKIEMCTHD.setText("");
    }//GEN-LAST:event_jtfTIMKIEMNANGCAOMouseClicked

    private void jtfTIMKIEMNANGCAOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfTIMKIEMNANGCAOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfTIMKIEMNANGCAOActionPerformed

    private void jtfTIMKIEMCTHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfTIMKIEMCTHDMouseClicked
        jtfTIMKIEMCTHD.setText("");
    }//GEN-LAST:event_jtfTIMKIEMCTHDMouseClicked

    private void jtfTIMKIEMNANGCAO_CTHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfTIMKIEMNANGCAO_CTHDMouseClicked
        jtfTIMKIEMNANGCAO_CTHD.setText("");
    }//GEN-LAST:event_jtfTIMKIEMNANGCAO_CTHDMouseClicked

    private void btnTIMKIEMCTHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTIMKIEMCTHDActionPerformed
        String ValueOfFind = jtfTIMKIEMCTHD.getText();
        String ValueOFFind_NangCao = jtfTIMKIEMNANGCAO_CTHD.getText();

        List<CTHOADON> kq = new ArrayList<>();
        CTHOADON cthd = new CTHOADON();
        HoaDonBUS hdBUS = new HoaDonBUS();
        int pos = jcbTIMKIEMCT_HD.getSelectedIndex();
        switch (pos) {
            case 0:
                jtfTIMKIEMCTHD.setText("Nhập dữ liệu tìm kiếm");
                jtfTIMKIEMNANGCAO_CTHD.setText("Nhập dữ liệu tìm kiếm");
                showCTHD();
                break;
            case 1:

                cthd = hdBUS.timTheoMaHD_CT(ValueOfFind);
                if (kq.size() == 0) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModelCTHD.setRowCount(0);

                    Vector<String> row = new Vector<>();
                    row.add(cthd.getMaHD());
                    row.add(cthd.getMaSP());
                    row.add(cthd.getTenSp());
                    row.add(String.valueOf(cthd.getDonGia()));
                    row.add(String.valueOf(cthd.getSoLuong()));
                    row.add(String.valueOf(cthd.getGiamGia()));
                    row.add(String.valueOf(cthd.getThanhTien()));

                    tableModelCTHD.addRow(row);

                    jtbCTHD.setModel(tableModelCTHD);
                }
                break;

            case 2:

                cthd = hdBUS.timTheoMaSP_CT(ValueOfFind);
                if (kq.size() == 0) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModelCTHD.setRowCount(0);

                    Vector<String> row = new Vector<>();
                    row.add(cthd.getMaHD());
                    row.add(cthd.getMaSP());
                    row.add(cthd.getTenSp());
                    row.add(String.valueOf(cthd.getDonGia()));
                    row.add(String.valueOf(cthd.getSoLuong()));
                    row.add(String.valueOf(cthd.getGiamGia()));
                    row.add(String.valueOf(cthd.getThanhTien()));

                    tableModelCTHD.addRow(row);

                    jtbCTHD.setModel(tableModelCTHD);
                }
                break;

            case 3:
                kq = hdBUS.timTheoDonGia(ValueOfFind);
                if (kq.size() == 0) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModelCTHD.setRowCount(0);
                    for (CTHOADON cthdkq : kq) {
                        Vector<String> row = new Vector<>();
                        row.add(cthd.getMaHD());
                        row.add(cthd.getMaSP());
                        row.add(cthd.getTenSp());
                        row.add(String.valueOf(cthd.getDonGia()));
                        row.add(String.valueOf(cthd.getSoLuong()));
                        row.add(String.valueOf(cthd.getGiamGia()));
                        row.add(String.valueOf(cthd.getThanhTien()));

                        tableModelCTHD.addRow(row);
                    }
                    jtbCTHD.setModel(tableModelCTHD);
                }
                break;

            /*           case 4:
                kq = kmBUS.timTheoNgayKT(ValueOfFind);
                if (kq.size() == 0) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModelCTKM.setRowCount(0);
                    for (CTKM ctkmkq : kq) {
                        Vector<String> row = new Vector<>();
                        row.add(ctkmkq.getMaKM());
                        row.add(ctkmkq.getTenCTKM());
                        row.add(ctkmkq.getNgayBD());
                        row.add(ctkmkq.getNgayKT());
                        tableModelCTKM.addRow(row);
                    }
                    jtbCTKM.setModel(tableModelCTKM);
                }
                break;
             */
            default:
                break;
        }
    }//GEN-LAST:event_btnTIMKIEMCTHDActionPerformed

    private void btnTIMKIEMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTIMKIEMActionPerformed
        String ValueOfFind = jtfTIMKIEM.getText();
        String ValueOFFind_NangCao = jtfTIMKIEMNANGCAO.getText();

        List<HOADON> kq = new ArrayList<>();
        HOADON hd = new HOADON();
        HoaDonBUS hdBUS = new HoaDonBUS();
        int pos = jcbTIMKIEM.getSelectedIndex();
        switch (pos) {
            case 0:
                jtfTIMKIEM.setText("Nhập dữ liệu tìm kiếm");
                jtfTIMKIEMNANGCAO.setText("Nhập dữ liệu tìm kiếm");
                showHOADON();
                break;
                
            case 1:
                hd = hdBUS.timTheoMaHD(ValueOfFind);
                if (hd == null) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModelHD.setRowCount(0);

                    Vector<String> row = new Vector<>();
                    row.add(hd.getMaHD());
                    row.add(hd.getMaNV());
                    row.add(hd.getMaKH());
                    row.add(hd.getMaKM());
                    row.add(hd.getNgayLapHD());
                    row.add(String.valueOf(hd.getTongTien()));

                    tableModelHD.addRow(row);

                    jtbHOADON.setModel(tableModelHD);
                }
                break;

            case 2:
                hd = hdBUS.timTheoMaNV(ValueOfFind);
                if (hd == null) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModelHD.setRowCount(0);

                    Vector<String> row = new Vector<>();
                    row.add(hd.getMaHD());
                    row.add(hd.getMaNV());
                    row.add(hd.getMaKH());
                    row.add(hd.getMaKM());
                    row.add(hd.getNgayLapHD());
                    row.add(String.valueOf(hd.getTongTien()));

                    tableModelHD.addRow(row);

                    jtbHOADON.setModel(tableModelHD);
                }
                break;

            case 3:
                hd = hdBUS.timTheoMaKH(ValueOfFind);
                if (hd == null) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModelHD.setRowCount(0);

                    Vector<String> row = new Vector<>();
                    row.add(hd.getMaHD());
                    row.add(hd.getMaNV());
                    row.add(hd.getMaKH());
                    row.add(hd.getMaKM());
                    row.add(hd.getNgayLapHD());
                    row.add(String.valueOf(hd.getTongTien()));

                    tableModelHD.addRow(row);

                    jtbHOADON.setModel(tableModelHD);
                }
                break;

            case 4:
                kq = hdBUS.timTheoNgayLap(ValueOfFind);
                if (kq.size() == 0) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModelHD.setRowCount(0);
                    for (HOADON hdkq : kq) {
                        Vector<String> row = new Vector<>();
                        row.add(hdkq.getMaHD());
                        row.add(hdkq.getMaNV());
                        row.add(hdkq.getMaKH());
                        row.add(hdkq.getMaKM());
                        row.add(hdkq.getNgayLapHD());
                        row.add(String.valueOf(hd.getTongTien()));

                        tableModelHD.addRow(row);
                    }
                    jtbHOADON.setModel(tableModelHD);
                }
                break;

            /*                       case 5:
                kq = hdBUS.timTheoDiaChivaNgaySinh(ValueOfFind, ValueOFFind_NangCao);
                if (kq.size() == 0) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModel.setRowCount(0);
                    for (NHANVIEN nhanvienkq : kq) {
                        Vector<String> row = new Vector<>();
                        row.add(nhanvienkq.getMaNV());
                        row.add(nhanvienkq.getTenNV());
                        row.add(nhanvienkq.getSDT_NV());
                        row.add(nhanvienkq.getNgaySinh_NV());
                        row.add(nhanvienkq.getDiaChi_NV());
                        tableModel.addRow(row);
                    }
                    jtbNHANVIEN.setModel(tableModel);
                }
                break;

            case 6:
                kq = nvBUS.timTheoDiaChihoacNgaySinh(ValueOfFind);
                if (kq.size() == 0) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModel.setRowCount(0);
                    for (NHANVIEN nhanvienkq : kq) {
                        Vector<String> row = new Vector<>();
                        row.add(nhanvienkq.getMaNV());
                        row.add(nhanvienkq.getTenNV());
                        row.add(nhanvienkq.getSDT_NV());
                        row.add(nhanvienkq.getNgaySinh_NV());
                        row.add(nhanvienkq.getDiaChi_NV());
                        tableModel.addRow(row);
                    }
                    jtbNHANVIEN.setModel(tableModel);
                }
                break; */
            default:
                break;
        }
    }//GEN-LAST:event_btnTIMKIEMActionPerformed

    private void jcbTIMKIEMCT_HDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTIMKIEMCT_HDActionPerformed
        if (jcbTIMKIEMCT_HD.getSelectedItem().equals("Mặc Định")) {
            //jtfTIMKIEMNANGCAO.setEnabled(true);
            jtfTIMKIEMCTHD.setText("Nhập dữ liệu tìm kiếm");
            jtfTIMKIEMNANGCAO_CTHD.setText("Nhập dữ liệu tìm kiếm");
        } else {
            jtfTIMKIEMCTHD.setText("Nhập dữ liệu tìm kiếm");
            jtfTIMKIEMNANGCAO_CTHD.setText("Nhập dữ liệu tìm kiếm");
            //jtfTIMKIEMNANGCAO.setEnabled(false);
        }
    }//GEN-LAST:event_jcbTIMKIEMCT_HDActionPerformed

    private void jcbTIMKIEMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTIMKIEMActionPerformed
        if (jcbTIMKIEM.getSelectedItem().equals("Mặc Định")) {
            //jtfTIMKIEMNANGCAO.setEnabled(true);
            jtfTIMKIEM.setText("Nhập dữ liệu tìm kiếm");
            jtfTIMKIEMNANGCAO.setText("Nhập dữ liệu tìm kiếm");
        } else {
            jtfTIMKIEM.setText("Nhập dữ liệu tìm kiếm");
            jtfTIMKIEMNANGCAO.setText("Nhập dữ liệu tìm kiếm");
            //jtfTIMKIEMNANGCAO.setEnabled(false);
        }
    }//GEN-LAST:event_jcbTIMKIEMActionPerformed

    private void jtbHOADONMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbHOADONMouseClicked
        if (evt.getSource() == jtbHOADON) {
            int i = jtbHOADON.getSelectedRow();

            if (i >= 0) {
                HoaDonBUS hdBUS = new HoaDonBUS();
                HOADON hd = new HOADON();

                hd = HoaDonBUS.HDLIST.get(i);
                jtfMAHD.setText(hd.getMaHD());
                jtfMANV.setText(hd.getMaNV());
                jtfMAKH.setText(hd.getMaKH());
                jtfMAKM.setText(hd.getMaKM());
                jtfNGAYLAPHD.setText(hd.getNgayLapHD());
                jtfTONGTIEN.setText(String.valueOf(hd.getTongTien()));

                ArrayList<CTHOADON> kq = new ArrayList<>();
                for (CTHOADON cthd : HoaDonBUS.CTHDLIST) {
                    if (hd.getMaHD().equalsIgnoreCase(cthd.getMaHD())) {
                        kq.add(cthd);
                    }
                }
                tableModelCTHD.setRowCount(0);
                for (CTHOADON cthd : kq) {

                    Vector<String> row = new Vector<>();
                    row.add(cthd.getMaHD());
                    row.add(cthd.getMaSP());
                    row.add(cthd.getTenSp());
                    row.add(String.valueOf(cthd.getDonGia()));
                    row.add(String.valueOf(cthd.getSoLuong()));
                    row.add(cthd.getGiamGia());
                    row.add(String.valueOf(cthd.getThanhTien()));

                    tableModelCTHD.addRow(row);
                }
                jtbCTHD.setModel(tableModelCTHD);
            }
        }
    }//GEN-LAST:event_jtbHOADONMouseClicked

    private void jtbCTHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbCTHDMouseClicked
        if (evt.getSource() == jtbCTHD) {
            int i = jtbCTHD.getSelectedRow();

            if (i >= 0) {
                HoaDonBUS hdBUS = new HoaDonBUS();
                CTHOADON cthd = new CTHOADON();

                jtfMAHD_CT.setText(jtfMAHD.getText());
                String MAHD = String.valueOf(tableModelCTHD.getValueAt(i, 0));
                String MASP = String.valueOf(tableModelCTHD.getValueAt(i, 1));
                String TENSP = String.valueOf(tableModelCTHD.getValueAt(i, 2));
                String DONGIA = String.valueOf(tableModelCTHD.getValueAt(i, 3));
                String SOLUONG = String.valueOf(tableModelCTHD.getValueAt(i, 4));
                String GIAMGIA = String.valueOf(tableModelCTHD.getValueAt(i, 5));
                String THANHTIEN = String.valueOf(tableModelCTHD.getValueAt(i, 6));

                jtfMAHD_CT.setText(MAHD);
                jtfMASP.setText(MASP);
                jtfTENSP.setText(TENSP);
                jtfDONGIA.setText(DONGIA);
                jtfSOLUONG.setText(SOLUONG);
                jtfGIAMGIA.setText(GIAMGIA);
                jtfTHANHTIEN.setText(THANHTIEN);

                btnXOA.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jtbCTHDMouseClicked

    private void btnCHONNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCHONNVActionPerformed
        CHONNV_VIEW2 chonnv_view = new CHONNV_VIEW2();
        chonnv_view.setVisible(true);
    }//GEN-LAST:event_btnCHONNVActionPerformed

    private void btnCHONKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCHONKHActionPerformed
        CHONKH_VIEW khachhang_view = new CHONKH_VIEW();
        khachhang_view.setVisible(true);
    }//GEN-LAST:event_btnCHONKHActionPerformed

    private void btnCHONKMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCHONKMActionPerformed
        CHONKM_VIEW chonkm_view = new CHONKM_VIEW();
        chonkm_view.setVisible(true);
    }//GEN-LAST:event_btnCHONKMActionPerformed

    private void btnCHONSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCHONSPActionPerformed
        CHONSP_VIEW2 chonsp_view2 = new CHONSP_VIEW2();
        chonsp_view2.setVisible(true);
    }//GEN-LAST:event_btnCHONSPActionPerformed

    private void jtfSOLUONGKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfSOLUONGKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            Double tinhtoanphantram = pt.Chuyenthanhphantram(jtfGIAMGIA.getText());
            Double thanhtien = Integer.valueOf(jtfSOLUONG.getText()) * Double.valueOf(jtfDONGIA.getText());
            thanhtien = thanhtien - (thanhtien * tinhtoanphantram);
            jtfTHANHTIEN.setText(String.valueOf(thanhtien));
        }
    }//GEN-LAST:event_jtfSOLUONGKeyPressed

    private void jtfTONGTIENKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTONGTIENKeyPressed
        HOADON hd = new HOADON();
        CTHOADON cthd = new CTHOADON();
        HoaDonBUS hdBUS = new HoaDonBUS();
        Double tongtien = 0.0;
        hd.setMaHD(jtfMAHD.getText());
        for (CTHOADON kq : HoaDonBUS.CTHDLIST) {
            if (hd.getMaHD().equals(kq.getMaHD())) {
                tongtien = tongtien + kq.getThanhTien();
                jtfTONGTIEN.setText(String.valueOf(tongtien));
            }
        }
    }//GEN-LAST:event_jtfTONGTIENKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCHONKH;
    private javax.swing.JButton btnCHONKM;
    private javax.swing.JButton btnCHONNV;
    private javax.swing.JButton btnCHONSP;
    private javax.swing.JButton btnRESET;
    private javax.swing.JButton btnSUA;
    private javax.swing.JButton btnTHEM_CTHD;
    private javax.swing.JButton btnTHEM_HD;
    private javax.swing.JButton btnTIMKIEM;
    private javax.swing.JButton btnTIMKIEMCTHD;
    private javax.swing.JButton btnXOA;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JComboBox<String> jcbTIMKIEM;
    private javax.swing.JComboBox<String> jcbTIMKIEMCT_HD;
    private javax.swing.JTable jtbCTHD;
    private javax.swing.JTable jtbHOADON;
    public static javax.swing.JTextField jtfDONGIA;
    public static javax.swing.JTextField jtfGIAMGIA;
    private javax.swing.JTextField jtfMAHD;
    private javax.swing.JTextField jtfMAHD_CT;
    public static javax.swing.JTextField jtfMAKH;
    public static javax.swing.JTextField jtfMAKM;
    public static javax.swing.JTextField jtfMANV;
    public static javax.swing.JTextField jtfMASP;
    private javax.swing.JTextField jtfNGAYLAPHD;
    private javax.swing.JTextField jtfSOLUONG;
    public static javax.swing.JTextField jtfTENSP;
    private javax.swing.JTextField jtfTHANHTIEN;
    private javax.swing.JTextField jtfTIMKIEM;
    private javax.swing.JTextField jtfTIMKIEMCTHD;
    private javax.swing.JTextField jtfTIMKIEMNANGCAO;
    private javax.swing.JTextField jtfTIMKIEMNANGCAO_CTHD;
    private javax.swing.JTextField jtfTONGTIEN;
    // End of variables declaration//GEN-END:variables
}
