/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import BUS.KhuyenMaiBUS;
import BUS.PhieuNhapHangBUS;
import Model.CTPHIEUNHAPHANG;
import Model.PHIEUNHAPHANG;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Quang Long
 */
public class PHIEUNHAPHANG_VIEW extends javax.swing.JPanel {

    DefaultTableModel tableModelPNH, tableModelCTPNH;

    /**
     * Creates new form PHIEUNHAPHANG1
     */
    public PHIEUNHAPHANG_VIEW() {
        initComponents();

        tableModelPNH = (DefaultTableModel) jtbPNH.getModel();
        tableModelCTPNH = (DefaultTableModel) jtbCT_PNH.getModel();
        showPNH();
        showCTPNH();

        jtfTIMKIEMNANGCAO.setEnabled(false);
        jtfTIMKIEMNANGCAO_CT.setEnabled(false);
        btnXOA.setEnabled(false);
        jtfTHANHTIEN.setEditable(false);
        jtfTONGTIEN.setEditable(false);
        jtfTONGTIEN.setText("0");
    }

    private void showPNH() {

        PhieuNhapHangBUS pnhBUS = new PhieuNhapHangBUS();
        PhieuNhapHangBUS.PNHLIST = pnhBUS.getAllPNH();

        tableModelPNH.setRowCount(0);

        for (PHIEUNHAPHANG pnh : PhieuNhapHangBUS.PNHLIST) {
            Vector<String> row = new Vector<>();
            row.add(pnh.getMaNH());
            row.add(pnh.getMaNV());
            row.add(pnh.getMaNCC());
            row.add(pnh.getNgayNhap());
            row.add(String.valueOf(pnh.getTongTien()));

            tableModelPNH.addRow(row);
        }

        jtbPNH.setModel(tableModelPNH);
    }

    private void showCTPNH() {

        PhieuNhapHangBUS pnhBUS = new PhieuNhapHangBUS();
        PhieuNhapHangBUS.CTPNHLIST = pnhBUS.getAllCT_PNH();

        tableModelCTPNH.setRowCount(0);

        for (CTPHIEUNHAPHANG ctpnh : PhieuNhapHangBUS.CTPNHLIST) {
            Vector<String> row = new Vector<>();
            row.add(ctpnh.getMaNH());
            row.add(ctpnh.getMaSP());
            row.add(String.valueOf(ctpnh.getSoLuong()));
            row.add(String.valueOf(ctpnh.getDonGia()));
            row.add(String.valueOf(ctpnh.getThanhTien()));

            tableModelCTPNH.addRow(row);
        }

        jtbCT_PNH.setModel(tableModelCTPNH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jtfMANH = new javax.swing.JTextField();
        jtfMANV = new javax.swing.JTextField();
        jtfMANCC = new javax.swing.JTextField();
        jtfNGAYNHAP = new javax.swing.JTextField();
        jtfTONGTIEN = new javax.swing.JTextField();
        btnCHONNCC = new javax.swing.JButton();
        btnCHONNV = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jtfMASP = new javax.swing.JTextField();
        jtfSOLUONG = new javax.swing.JTextField();
        jtfDONGIA = new javax.swing.JTextField();
        jtfTHANHTIEN = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jtfMANH_CT = new javax.swing.JTextField();
        btnCHONSP = new javax.swing.JButton();
        btnTHEM_PNH = new javax.swing.JButton();
        btnXOA = new javax.swing.JButton();
        btnSUA = new javax.swing.JButton();
        btnRESET = new javax.swing.JButton();
        btnTHEMCT_PNH = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtbPNH = new javax.swing.JTable();
        btnTIMKIEM = new javax.swing.JButton();
        jcbTIMKIEM = new javax.swing.JComboBox<>();
        jtfTIMKIEM = new javax.swing.JTextField();
        jtfTIMKIEMNANGCAO = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtbCT_PNH = new javax.swing.JTable();
        btnTIMKIEM_CT = new javax.swing.JButton();
        jtfTIMKIEM_CT = new javax.swing.JTextField();
        jtfTIMKIEMNANGCAO_CT = new javax.swing.JTextField();
        jcbTIMKIEM_CT = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(210, 145, 188));
        setPreferredSize(new java.awt.Dimension(1200, 900));

        jPanel5.setBackground(new java.awt.Color(210, 145, 188));

        jPanel8.setBackground(new java.awt.Color(255, 200, 231));

        jPanel9.setBackground(new java.awt.Color(255, 200, 231));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setText("THÔNG TIN QUẢN LÝ");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel11.setText("ID Nhập hàng:");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel12.setText("ID Nhân viên:");

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel13.setText("ID Nhà cung cấp:");

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel14.setText("Ngày nhập:");

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel15.setText("Tổng tiền:");

        jtfTONGTIEN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfTONGTIENMouseClicked(evt);
            }
        });
        jtfTONGTIEN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfTONGTIENActionPerformed(evt);
            }
        });

        btnCHONNCC.setText("...");
        btnCHONNCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCHONNCCActionPerformed(evt);
            }
        });

        btnCHONNV.setText("...");
        btnCHONNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCHONNVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtfMANH, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                                    .addComponent(jtfMANV))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCHONNV, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jtfNGAYNHAP, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                                    .addComponent(jtfMANCC)
                                    .addComponent(jtfTONGTIEN))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCHONNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addComponent(jLabel10)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfMANH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfMANV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(btnCHONNV))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfMANCC)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(btnCHONNCC)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jtfNGAYNHAP, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jtfTONGTIEN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        jPanel10.setBackground(new java.awt.Color(255, 200, 231));

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel16.setText("CHI TIẾT NHẬP HÀNG");

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel17.setText("ID Sản phẩm:");

        jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel18.setText("Số lượng:");

        jLabel19.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel19.setText("Đơn giá:");

        jLabel20.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel20.setText("Thành tiền:");

        jtfDONGIA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfDONGIAKeyPressed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel23.setText("ID Nhập hàng:");

        jtfMANH_CT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfMANH_CTMouseClicked(evt);
            }
        });

        btnCHONSP.setText("...");
        btnCHONSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCHONSPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfSOLUONG)
                            .addComponent(jtfMASP, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtfTHANHTIEN, javax.swing.GroupLayout.DEFAULT_SIZE, 569, Short.MAX_VALUE)
                            .addComponent(jtfDONGIA, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCHONSP, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfMANH_CT, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addGap(263, 263, 263))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfMANH_CT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfMASP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(btnCHONSP))
                .addGap(7, 7, 7)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfSOLUONG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel19))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jtfDONGIA, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jtfTHANHTIEN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        btnTHEM_PNH.setBackground(new java.awt.Color(255, 200, 231));
        btnTHEM_PNH.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        btnTHEM_PNH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/plus-sign.png"))); // NOI18N
        btnTHEM_PNH.setText("THÊM THÔNG TIN");
        btnTHEM_PNH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTHEM_PNHActionPerformed(evt);
            }
        });

        btnXOA.setBackground(new java.awt.Color(255, 200, 231));
        btnXOA.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        btnXOA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/delete-button.png"))); // NOI18N
        btnXOA.setText("XÓA");
        btnXOA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXOAActionPerformed(evt);
            }
        });

        btnSUA.setBackground(new java.awt.Color(255, 200, 231));
        btnSUA.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        btnSUA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/eraser.png"))); // NOI18N
        btnSUA.setText("SỬA");
        btnSUA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSUAActionPerformed(evt);
            }
        });

        btnRESET.setBackground(new java.awt.Color(255, 200, 231));
        btnRESET.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        btnRESET.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/reset.png"))); // NOI18N
        btnRESET.setText("RESET");
        btnRESET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRESETActionPerformed(evt);
            }
        });

        btnTHEMCT_PNH.setBackground(new java.awt.Color(255, 200, 231));
        btnTHEMCT_PNH.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        btnTHEMCT_PNH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/plus-sign.png"))); // NOI18N
        btnTHEMCT_PNH.setText("THÊM THÔNG TIN");
        btnTHEMCT_PNH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTHEMCT_PNHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(187, 187, 187)
                .addComponent(btnTHEM_PNH)
                .addGap(18, 18, 18)
                .addComponent(btnXOA)
                .addGap(18, 18, 18)
                .addComponent(btnSUA)
                .addGap(18, 18, 18)
                .addComponent(btnRESET)
                .addGap(67, 67, 67)
                .addComponent(btnTHEMCT_PNH)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTHEM_PNH)
                    .addComponent(btnXOA)
                    .addComponent(btnSUA)
                    .addComponent(btnRESET)
                    .addComponent(btnTHEMCT_PNH))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(254, 200, 216));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/import.png"))); // NOI18N
        jLabel1.setText("QUẢN LÝ PHIẾU NHẬP HÀNG");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(366, 366, 366)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(255, 200, 231));

        jtbPNH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID NH", "ID NV", "ID NCC", "Ngày nhập", "Tổng tiền"
            }
        ));
        jtbPNH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbPNHMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtbPNH);

        btnTIMKIEM.setBackground(new java.awt.Color(255, 200, 231));
        btnTIMKIEM.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        btnTIMKIEM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/web-search-engine.png"))); // NOI18N
        btnTIMKIEM.setText("TÌM KIẾM");
        btnTIMKIEM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTIMKIEMActionPerformed(evt);
            }
        });

        jcbTIMKIEM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mặc định", "Mã NH", "Mã NV", "Mã NCC", "Ngày Nhập" }));
        jcbTIMKIEM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTIMKIEMActionPerformed(evt);
            }
        });

        jtfTIMKIEM.setText("Nhập dữ liệu tìm kiếm");
        jtfTIMKIEM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfTIMKIEMMouseClicked(evt);
            }
        });

        jtfTIMKIEMNANGCAO.setText("Nhập dữ liệu tìm kiếm");
        jtfTIMKIEMNANGCAO.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfTIMKIEMNANGCAOMouseClicked(evt);
            }
        });
        jtfTIMKIEMNANGCAO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfTIMKIEMNANGCAOActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/file.png"))); // NOI18N
        jLabel22.setText("THÔNG TIN QUẢN LÝ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(163, 163, 163)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 404, Short.MAX_VALUE)
                .addComponent(jcbTIMKIEM, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtfTIMKIEMNANGCAO, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                    .addComponent(jtfTIMKIEM))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTIMKIEM)
                .addGap(161, 161, 161))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTIMKIEM)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcbTIMKIEM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfTIMKIEM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfTIMKIEMNANGCAO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 200, 231));

        jtbCT_PNH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID NH", "ID SP", "Số lượng", "Đơn giá", "Thành tiền"
            }
        ));
        jtbCT_PNH.setSelectionForeground(new java.awt.Color(224, 187, 228));
        jtbCT_PNH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbCT_PNHMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jtbCT_PNH);

        btnTIMKIEM_CT.setBackground(new java.awt.Color(255, 200, 231));
        btnTIMKIEM_CT.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        btnTIMKIEM_CT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/web-search-engine.png"))); // NOI18N
        btnTIMKIEM_CT.setText("TÌM KIẾM");
        btnTIMKIEM_CT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTIMKIEM_CTActionPerformed(evt);
            }
        });

        jtfTIMKIEM_CT.setText("Nhập dữ liệu tìm kiếm");
        jtfTIMKIEM_CT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfTIMKIEM_CTMouseClicked(evt);
            }
        });

        jtfTIMKIEMNANGCAO_CT.setText("Nhập dữ liệu tìm kiếm");
        jtfTIMKIEMNANGCAO_CT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfTIMKIEMNANGCAO_CTMouseClicked(evt);
            }
        });

        jcbTIMKIEM_CT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mặc Định", "Mã SP", "Đơn Giá" }));
        jcbTIMKIEM_CT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTIMKIEM_CTActionPerformed(evt);
            }
        });

        jLabel21.setBackground(new java.awt.Color(255, 200, 231));
        jLabel21.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/file.png"))); // NOI18N
        jLabel21.setText("CHI TIẾT NHẬP HÀNG");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 397, Short.MAX_VALUE)
                .addComponent(jcbTIMKIEM_CT, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtfTIMKIEMNANGCAO_CT)
                    .addComponent(jtfTIMKIEM_CT, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTIMKIEM_CT)
                .addGap(159, 159, 159))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfTIMKIEM_CT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbTIMKIEM_CT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfTIMKIEMNANGCAO_CT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnTIMKIEM_CT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jtfTONGTIENActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfTONGTIENActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfTONGTIENActionPerformed

    private void btnTHEM_PNHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTHEM_PNHActionPerformed
        PHIEUNHAPHANG pnh = new PHIEUNHAPHANG();
        int ktra = 1;
        PhieuNhapHangBUS pnhBUS = new PhieuNhapHangBUS();
        pnh.setMaNH(jtfMANH.getText().trim());
        if (jtfMANH.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Lỗi không được để Mã NH trống", "Lôi", JOptionPane.ERROR_MESSAGE);
        } else {
            for (PHIEUNHAPHANG manh : PhieuNhapHangBUS.PNHLIST) {
                if (pnh.getMaNH().equalsIgnoreCase(manh.getMaNH())) {
                    ktra = 0;
                }
            }
            if (ktra == 1) {
                pnh.setMaNV(jtfMANV.getText().trim());
                pnh.setMaNCC(jtfMANCC.getText().trim());
                pnh.setNgayNhap(jtfNGAYNHAP.getText().trim());
                pnh.setTongTien(0);

                try {
                    int result_PNH = pnhBUS.insertPNH(pnh);
                    if (result_PNH != 0) {
                        JOptionPane.showMessageDialog(this,
                                "Thêm dữ liệu thành công!", "Thông báo",
                                JOptionPane.INFORMATION_MESSAGE);
                    }
                    showPNH();
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Mã NH đã bị trùng lặp do khởi tạo trước đó", "Lôi", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_btnTHEM_PNHActionPerformed

    private void btnXOAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXOAActionPerformed
        PhieuNhapHangBUS pnhBUS = new PhieuNhapHangBUS();
        int selectedIndex = jtbCT_PNH.getSelectedRow();
        if (selectedIndex >= 0) {
            CTPHIEUNHAPHANG std = PhieuNhapHangBUS.CTPNHLIST.get(selectedIndex);

            int option = JOptionPane.showConfirmDialog(this, "Do you want to delete this item?");

            if (option == 0) {
                pnhBUS.deleteCT_PNH(std.getMaNH());

                showCTPNH();
            }
        }
    }//GEN-LAST:event_btnXOAActionPerformed

    private void btnSUAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSUAActionPerformed
        int i = jtbPNH.getSelectedRow();
        int j = jtbCT_PNH.getSelectedRow();
        int ktraPNH = 1; //Gia tri dung, khong trung, duoc sua
        int ktraCTPNH = 1;
        jtfMANH.setEditable(false);
        if (i >= 0 && j<0) {
            PHIEUNHAPHANG pnh = new PHIEUNHAPHANG();
            PHIEUNHAPHANG pnh_old = PhieuNhapHangBUS.PNHLIST.set(i, pnh);
            if (ktraPNH == 1) {
                pnh.setMaNH(jtfMANH.getText());
                pnh.setMaNV(jtfMANV.getText());
                pnh.setMaNCC(jtfMANCC.getText());
                pnh.setNgayNhap(jtfNGAYNHAP.getText());
                pnh.setTongTien(Double.valueOf(jtfTONGTIEN.getText()));

                PhieuNhapHangBUS pnhBUS = new PhieuNhapHangBUS();
                int kt = pnhBUS.updatePNH(pnh, pnh_old);
                if (kt != 0) {
                   /* tableModelPNH.setValueAt(pnh_old.getMaNH(), i, 0);
                    tableModelPNH.setValueAt(pnh.getMaNV(), i, 1);
                    tableModelPNH.setValueAt(pnh.getMaNCC(), i, 2);
                    tableModelPNH.setValueAt(pnh.getNgayNhap(), i, 3);
                    tableModelPNH.setValueAt(pnh.getTongTien(), i, 4);
                    jtbPNH.setModel(tableModelPNH);*/                 
                    JOptionPane.showMessageDialog(null, "Sửa thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    showPNH();
                } else {
                    JOptionPane.showMessageDialog(null, "Lỗi", "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else if (i < 0 && j >= 0) {

            CTPHIEUNHAPHANG ctpnh = new CTPHIEUNHAPHANG();
            CTPHIEUNHAPHANG ctpnh_old = PhieuNhapHangBUS.CTPNHLIST.set(j, ctpnh);
            if (ktraCTPNH == 1) {

                ctpnh.setMaNH(jtfMANH_CT.getText());
                ctpnh.setMaSP(jtfMASP.getText());
                ctpnh.setSoLuong(Integer.valueOf(jtfSOLUONG.getText()));
                ctpnh.setDonGia(Double.valueOf(jtfDONGIA.getText()));
                ctpnh.setThanhTien(Double.valueOf(jtfTHANHTIEN.getText()));
                PhieuNhapHangBUS pnhBUS = new PhieuNhapHangBUS();
                int kt = pnhBUS.updateCT_PNH(ctpnh, ctpnh_old);
                if (kt != 0) {
                    tableModelCTPNH.setValueAt(ctpnh_old.getMaNH(), j, 0);
                    tableModelCTPNH.setValueAt(ctpnh.getMaSP(), j, 1);
                    tableModelCTPNH.setValueAt(ctpnh.getSoLuong(), j, 2);
                    tableModelCTPNH.setValueAt(ctpnh.getDonGia(), j, 3);
                    tableModelCTPNH.setValueAt(ctpnh.getThanhTien(), j, 4);
                    jtbCT_PNH.setModel(tableModelCTPNH);
                    JOptionPane.showMessageDialog(null, "Sửa thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Lỗi", "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(null, "Vui lòng chỉ chọn sửa 1 bảng trong 1 lần thực hiện","Lỗi",JOptionPane.ERROR_MESSAGE);
            }
        }   
    }//GEN-LAST:event_btnSUAActionPerformed

    private void btnRESETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRESETActionPerformed
        jtfMANH.setText("");
        jtfMANV.setText("");
        jtfMANCC.setText("");
        jtfMANH_CT.setText("");
        jtfMANV.setText("");
        jtfMASP.setText("");
        jtfNGAYNHAP.setText("");
        jtfSOLUONG.setText("");
        jtfTHANHTIEN.setText("");
        jtfTONGTIEN.setText("");
    }//GEN-LAST:event_btnRESETActionPerformed

    private void btnTHEMCT_PNHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTHEMCT_PNHActionPerformed
        int ktra = 1;
        int ktraPNH = 1;
        int ktraMaKM_tontai_PNH = 0;
        int i = 0;
        int j = jtbCT_PNH.getSelectedRow();

        CTPHIEUNHAPHANG ctpnh = new CTPHIEUNHAPHANG();
        PhieuNhapHangBUS pnhBUS = new PhieuNhapHangBUS();
        PHIEUNHAPHANG update_pnh_tongtien = new PHIEUNHAPHANG();

        ctpnh.setMaNH(jtfMANH_CT.getText().trim());
        ctpnh.setMaSP(jtfMASP.getText().trim());

        if (jtfMANH_CT.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Lỗi không được để Mã MH chi tiết trống", "Lôi", JOptionPane.ERROR_MESSAGE);
        } else {
            for (CTPHIEUNHAPHANG ct : PhieuNhapHangBUS.CTPNHLIST) {
                if (ctpnh.getMaNH().equalsIgnoreCase(ct.getMaNH()) && ctpnh.getMaSP().equalsIgnoreCase(ct.getMaSP())) {
                    ktra = 0;
                }
            }
            if (ktra == 1) {
                for (PHIEUNHAPHANG pnh_kt : PhieuNhapHangBUS.PNHLIST) {
                    if (ctpnh.getMaNH().equalsIgnoreCase(pnh_kt.getMaNH())) {
                        ktraMaKM_tontai_PNH = 1;
                    }
                }
                if (ktraMaKM_tontai_PNH == 1) {
                    ctpnh.setSoLuong(Integer.valueOf(jtfSOLUONG.getText().trim()));
                    ctpnh.setDonGia(Double.valueOf(jtfDONGIA.getText().trim()));
                    ctpnh.setThanhTien(Double.valueOf(jtfTHANHTIEN.getText().trim()));
                    try {
                        int result_CTPNH = pnhBUS.insertCT_PNH(ctpnh);
                        if (result_CTPNH != 0) {
                            JOptionPane.showMessageDialog(this,
                                    "Thêm dữ liệu thành công!", "Thông báo",
                                    JOptionPane.INFORMATION_MESSAGE);
                        }
                        showCTPNH();
                        showPNH();
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Mã KM này không tồn tại để khởi tạo", "Lôi", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Mã KM đã bị trùng lặp do khởi tạo trước đó", "Lôi", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnTHEMCT_PNHActionPerformed

    private void jcbTIMKIEMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTIMKIEMActionPerformed
        if (jcbTIMKIEM.getSelectedItem().equals("Mặc Định")) {
            //jtfTIMKIEMNANGCAO.setEnabled(true);
            jtfTIMKIEM.setText("Nhập dữ liệu tìm kiếm");
        } else {
            jtfTIMKIEM.setText("Nhập dữ liệu tìm kiếm");
            jtfTIMKIEMNANGCAO.setText("Nhập dữ liệu tìm kiếm");
            //jtfTIMKIEMNANGCAO.setEnabled(false);
        }
    }//GEN-LAST:event_jcbTIMKIEMActionPerformed

    private void jcbTIMKIEM_CTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTIMKIEM_CTActionPerformed
        if (jcbTIMKIEM.getSelectedItem().equals("Mặc Định")) {
            //jtfTIMKIEMNANGCAO.setEnabled(true);
            jtfTIMKIEM.setText("Nhập dữ liệu tìm kiếm");
        } else {
            jtfTIMKIEM.setText("Nhập dữ liệu tìm kiếm");
            jtfTIMKIEMNANGCAO.setText("Nhập dữ liệu tìm kiếm");
            //jtfTIMKIEMNANGCAO.setEnabled(false);
        }
    }//GEN-LAST:event_jcbTIMKIEM_CTActionPerformed

    private void jtfTIMKIEMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfTIMKIEMMouseClicked
        jtfTIMKIEM.setText("");
    }//GEN-LAST:event_jtfTIMKIEMMouseClicked

    private void jtfTIMKIEMNANGCAOMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfTIMKIEMNANGCAOMouseClicked
        jtfTIMKIEMNANGCAO.setText("");
    }//GEN-LAST:event_jtfTIMKIEMNANGCAOMouseClicked

    private void jtfTIMKIEM_CTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfTIMKIEM_CTMouseClicked
        jtfTIMKIEM_CT.setText("");
    }//GEN-LAST:event_jtfTIMKIEM_CTMouseClicked

    private void jtfTIMKIEMNANGCAO_CTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfTIMKIEMNANGCAO_CTMouseClicked
        jtfTIMKIEMNANGCAO_CT.setText("");
    }//GEN-LAST:event_jtfTIMKIEMNANGCAO_CTMouseClicked

    private void btnCHONNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCHONNVActionPerformed
        CHONNV_VIEW chonnv_view = new CHONNV_VIEW();
        chonnv_view.setVisible(true);
    }//GEN-LAST:event_btnCHONNVActionPerformed

    private void btnCHONNCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCHONNCCActionPerformed
        CHONNCC_VIEW chonncc_view = new CHONNCC_VIEW();
        chonncc_view.setVisible(true);
    }//GEN-LAST:event_btnCHONNCCActionPerformed

    private void btnCHONSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCHONSPActionPerformed
        CHONSP_VIEW chonsp_view = new CHONSP_VIEW();
        chonsp_view.setVisible(true);
    }//GEN-LAST:event_btnCHONSPActionPerformed

    private void jtfMANH_CTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfMANH_CTMouseClicked
        jtfMANH_CT.setText(jtfMANH.getText());
    }//GEN-LAST:event_jtfMANH_CTMouseClicked

    private void jtbPNHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbPNHMouseClicked
        if (evt.getSource() == jtbPNH) {
            int i = jtbPNH.getSelectedRow();

            if (i >= 0) {
                PhieuNhapHangBUS pnhBUS = new PhieuNhapHangBUS();
                PHIEUNHAPHANG pnh = new PHIEUNHAPHANG();

                pnh = PhieuNhapHangBUS.PNHLIST.get(i);
                jtfMANH.setText(pnh.getMaNH());
                jtfMANV.setText(pnh.getMaNV());
                jtfMANCC.setText(pnh.getMaNCC());
                jtfNGAYNHAP.setText(pnh.getNgayNhap());
                jtfTONGTIEN.setText(String.valueOf(pnh.getTongTien()));

                ArrayList<CTPHIEUNHAPHANG> kq = new ArrayList<>();
                for (CTPHIEUNHAPHANG ctpnh : PhieuNhapHangBUS.CTPNHLIST) {
                    if (pnh.getMaNH().equalsIgnoreCase(ctpnh.getMaNH())) {
                        kq.add(ctpnh);
                    }
                }
                tableModelCTPNH.setRowCount(0);
                for (CTPHIEUNHAPHANG ctpnh : kq) {

                    Vector<String> row = new Vector<>();
                    row.add(ctpnh.getMaNH());
                    row.add(ctpnh.getMaSP());
                    row.add(String.valueOf(ctpnh.getSoLuong()));
                    row.add(String.valueOf(ctpnh.getDonGia()));
                    row.add(String.valueOf(ctpnh.getThanhTien()));

                    tableModelCTPNH.addRow(row);
                }
                jtbCT_PNH.setModel(tableModelCTPNH);
            }
        }
    }//GEN-LAST:event_jtbPNHMouseClicked

    private void jtbCT_PNHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbCT_PNHMouseClicked
        if (evt.getSource() == jtbCT_PNH) {
            int i = jtbCT_PNH.getSelectedRow();

            if (i >= 0) {
                PhieuNhapHangBUS pnhBUS = new PhieuNhapHangBUS();
                //SANPHAM_VIEW sp_view = new SANPHAM_VIEW();
                CTPHIEUNHAPHANG ctpnh = new CTPHIEUNHAPHANG();
                
                //jtfMANH_CT.setText(jtfMANH.getText());
                String MANH = String.valueOf(tableModelCTPNH.getValueAt(i, 0));
                String MASP = String.valueOf(tableModelCTPNH.getValueAt(i, 1));
                String SOLUONG = String.valueOf(tableModelCTPNH.getValueAt(i, 2));
                String DONGIA = String.valueOf(tableModelCTPNH.getValueAt(i, 3));
                String THANHTIEN = String.valueOf(tableModelCTPNH.getValueAt(i, 4));

                jtfMANH_CT.setText(MANH);
                jtfMASP.setText(MASP);
                jtfSOLUONG.setText(SOLUONG);
                jtfDONGIA.setText(DONGIA);
                jtfTHANHTIEN.setText(THANHTIEN);
                //ctctkm = KhuyenMaiBUS.CTCTKMLIST.get(i);
                //jtfMAKM_CT.setText(ctctkm.getMaKM());
                //jtfMASP.setText(ctctkm.getMaSP());
                //jtfPHANTRAM_KM.setText(ctctkm.getPhantram_KM());

                btnXOA.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jtbCT_PNHMouseClicked

    private void btnTIMKIEM_CTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTIMKIEM_CTActionPerformed
        String ValueOfFind = jtfTIMKIEM_CT.getText();
        String ValueOFFind_NangCao = jtfTIMKIEMNANGCAO_CT.getText();

        List<CTPHIEUNHAPHANG> kq = new ArrayList<>();
        CTPHIEUNHAPHANG ctpnh = new CTPHIEUNHAPHANG();
        PhieuNhapHangBUS pnhBUS = new PhieuNhapHangBUS();
        int pos = jcbTIMKIEM_CT.getSelectedIndex();
        switch (pos) {
            case 0:
                jtfTIMKIEM_CT.setText("Nhập dữ liệu tìm kiếm");
                jtfTIMKIEMNANGCAO_CT.setText("Nhập dữ liệu tìm kiếm");
                showCTPNH();
                break;
            case 1:

                ctpnh = pnhBUS.timTheoMaSP_CT(ValueOfFind);
                if (kq.size() == 0) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModelCTPNH.setRowCount(0);
                    for (CTPHIEUNHAPHANG ctpnhkq : kq) {
                        Vector<String> row = new Vector<>();
                        row.add(ctpnh.getMaNH());
                        row.add(ctpnh.getMaSP());
                        row.add(String.valueOf(ctpnh.getSoLuong()));
                        row.add(String.valueOf(ctpnh.getDonGia()));
                        row.add(String.valueOf(ctpnh.getThanhTien()));

                        tableModelCTPNH.addRow(row);
                    }
                    jtbCT_PNH.setModel(tableModelCTPNH);
                }
                break;

            case 2:

                kq = pnhBUS.timTheoDonGia(ValueOfFind);
                if (kq.size() == 0) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModelCTPNH.setRowCount(0);
                    for (CTPHIEUNHAPHANG ctpnhkq : kq) {
                        Vector<String> row = new Vector<>();
                        row.add(ctpnh.getMaNH());
                        row.add(ctpnh.getMaSP());
                        row.add(String.valueOf(ctpnh.getSoLuong()));
                        row.add(String.valueOf(ctpnh.getDonGia()));
                        row.add(String.valueOf(ctpnh.getThanhTien()));
                        tableModelCTPNH.addRow(row);
                    }
                    jtbCT_PNH.setModel(tableModelCTPNH);
                }
                break;

            /*case 3:
                kq = kmBUS.timTheoNgayBD(ValueOfFind);
                if (kq.size() == 0) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModelCTKM.setRowCount(0);
                    for (CTKM ctkmkq : kq) {
                        Vector<String> row = new Vector<>();
                        row.add(ctkmkq.getMaKM());
                        row.add(ctkmkq.getTenCTKM());
                        row.add(ctkmkq.getNgayBD());
                        row.add(ctkmkq.getNgayKT());
                        tableModelCTKM.addRow(row);
                    }
                    jtbCTKM.setModel(tableModelCTKM);
                }
                break;

            case 4:
                kq = kmBUS.timTheoNgayKT(ValueOfFind);
                if (kq.size() == 0) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModelCTKM.setRowCount(0);
                    for (CTKM ctkmkq : kq) {
                        Vector<String> row = new Vector<>();
                        row.add(ctkmkq.getMaKM());
                        row.add(ctkmkq.getTenCTKM());
                        row.add(ctkmkq.getNgayBD());
                        row.add(ctkmkq.getNgayKT());
                        tableModelCTKM.addRow(row);
                    }
                    jtbCTKM.setModel(tableModelCTKM);
                }
                break;*/
            default:
                break;
        }
    }//GEN-LAST:event_btnTIMKIEM_CTActionPerformed

    private void btnTIMKIEMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTIMKIEMActionPerformed
        String ValueOfFind = jtfTIMKIEM.getText();
        String ValueOFFind_NangCao = jtfTIMKIEMNANGCAO.getText();

        List<PHIEUNHAPHANG> kq = new ArrayList<>();
        PHIEUNHAPHANG pnh = new PHIEUNHAPHANG();
        PhieuNhapHangBUS pnhBUS = new PhieuNhapHangBUS();
        int pos = jcbTIMKIEM.getSelectedIndex();
        switch (pos) {
            case 0:
                jtfTIMKIEM.setText("Nhập dữ liệu tìm kiếm");
                jtfTIMKIEMNANGCAO.setText("Nhập dữ liệu tìm kiếm");
                showPNH();
                break;
            case 1:

                pnh = pnhBUS.timTheoMaNH(ValueOfFind);
                if (pnh == null) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModelPNH.setRowCount(0);

                    Vector<String> row = new Vector<>();
                    row.add(pnh.getMaNH());
                    row.add(pnh.getMaNV());
                    row.add(pnh.getMaNCC());
                    row.add(pnh.getNgayNhap());
                    row.add(String.valueOf(pnh.getTongTien()));
                    tableModelPNH.addRow(row);

                    jtbPNH.setModel(tableModelPNH);
                }
                break;

            case 2:

                pnh = pnhBUS.timTheoMaNCC(ValueOfFind);
                if (pnh == null) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModelPNH.setRowCount(0);

                    Vector<String> row = new Vector<>();
                    row.add(pnh.getMaNH());
                    row.add(pnh.getMaNV());
                    row.add(pnh.getMaNCC());
                    row.add(pnh.getNgayNhap());
                    row.add(String.valueOf(pnh.getTongTien()));
                    tableModelPNH.addRow(row);

                    jtbPNH.setModel(tableModelPNH);
                }
                break;

            case 3:
                pnh = pnhBUS.timTheoMaNV(ValueOfFind);
                if (pnh == null) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModelPNH.setRowCount(0);

                    Vector<String> row = new Vector<>();
                    row.add(pnh.getMaNH());
                    row.add(pnh.getMaNV());
                    row.add(pnh.getMaNCC());
                    row.add(pnh.getNgayNhap());
                    row.add(String.valueOf(pnh.getTongTien()));
                    tableModelPNH.addRow(row);

                    jtbPNH.setModel(tableModelPNH);
                }

            case 4:
                kq = pnhBUS.timTheoNgayNhap(ValueOfFind);
                if (kq.size() == 0) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModelPNH.setRowCount(0);
                    for (PHIEUNHAPHANG pnhkq : kq) {
                        Vector<String> row = new Vector<>();
                        row.add(pnh.getMaNH());
                        row.add(pnh.getMaNV());
                        row.add(pnh.getMaNCC());
                        row.add(pnh.getNgayNhap());
                        row.add(String.valueOf(pnh.getTongTien()));
                        tableModelPNH.addRow(row);
                    }
                    jtbPNH.setModel(tableModelPNH);
                }
                break;

            /*           case 5:
                kq = nvBUS.timTheoDiaChivaNgaySinh(ValueOfFind, ValueOFFind_NangCao);
                if (kq.size() == 0) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModel.setRowCount(0);
                    for (NHANVIEN nhanvienkq : kq) {
                        Vector<String> row = new Vector<>();
                        row.add(nhanvienkq.getMaNV());
                        row.add(nhanvienkq.getTenNV());
                        row.add(nhanvienkq.getSDT_NV());
                        row.add(nhanvienkq.getNgaySinh_NV());
                        row.add(nhanvienkq.getDiaChi_NV());
                        tableModel.addRow(row);
                    }
                    jtbNHANVIEN.setModel(tableModel);
                }
                break;

            case 6:
                kq = nvBUS.timTheoDiaChihoacNgaySinh(ValueOfFind);
                if (kq.size() == 0) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModel.setRowCount(0);
                    for (NHANVIEN nhanvienkq : kq) {
                        Vector<String> row = new Vector<>();
                        row.add(nhanvienkq.getMaNV());
                        row.add(nhanvienkq.getTenNV());
                        row.add(nhanvienkq.getSDT_NV());
                        row.add(nhanvienkq.getNgaySinh_NV());
                        row.add(nhanvienkq.getDiaChi_NV());
                        tableModel.addRow(row);
                    }
                    jtbNHANVIEN.setModel(tableModel);
                }
                break; */
            default:
                break;
        }
    }//GEN-LAST:event_btnTIMKIEMActionPerformed

    private void jtfDONGIAKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfDONGIAKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            Double thanhtien = Integer.valueOf(jtfSOLUONG.getText()) * Double.valueOf(jtfDONGIA.getText());
            jtfTHANHTIEN.setText(String.valueOf(thanhtien));
        }
    }//GEN-LAST:event_jtfDONGIAKeyPressed

    private void jtfTONGTIENMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfTONGTIENMouseClicked
        PHIEUNHAPHANG pnh = new PHIEUNHAPHANG();
        CTPHIEUNHAPHANG ctpnh = new CTPHIEUNHAPHANG();
        PhieuNhapHangBUS pnhBUS = new PhieuNhapHangBUS();
        Double tongtien = 0.0;
        pnh.setMaNH(jtfMANH.getText());
        for (CTPHIEUNHAPHANG kq : PhieuNhapHangBUS.CTPNHLIST) {
            if (pnh.getMaNH().equals(kq.getMaNH())) {
                tongtien = tongtien + kq.getThanhTien();
                jtfTONGTIEN.setText(String.valueOf(tongtien));
            } 
        }
    }//GEN-LAST:event_jtfTONGTIENMouseClicked

    private void jtfTIMKIEMNANGCAOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfTIMKIEMNANGCAOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfTIMKIEMNANGCAOActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCHONNCC;
    private javax.swing.JButton btnCHONNV;
    private javax.swing.JButton btnCHONSP;
    private javax.swing.JButton btnRESET;
    private javax.swing.JButton btnSUA;
    private javax.swing.JButton btnTHEMCT_PNH;
    private javax.swing.JButton btnTHEM_PNH;
    private javax.swing.JButton btnTIMKIEM;
    private javax.swing.JButton btnTIMKIEM_CT;
    private javax.swing.JButton btnXOA;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JComboBox<String> jcbTIMKIEM;
    private javax.swing.JComboBox<String> jcbTIMKIEM_CT;
    private javax.swing.JTable jtbCT_PNH;
    private javax.swing.JTable jtbPNH;
    private javax.swing.JTextField jtfDONGIA;
    public static javax.swing.JTextField jtfMANCC;
    private javax.swing.JTextField jtfMANH;
    private javax.swing.JTextField jtfMANH_CT;
    public static javax.swing.JTextField jtfMANV;
    public static javax.swing.JTextField jtfMASP;
    private javax.swing.JTextField jtfNGAYNHAP;
    private javax.swing.JTextField jtfSOLUONG;
    private javax.swing.JTextField jtfTHANHTIEN;
    private javax.swing.JTextField jtfTIMKIEM;
    private javax.swing.JTextField jtfTIMKIEMNANGCAO;
    private javax.swing.JTextField jtfTIMKIEMNANGCAO_CT;
    private javax.swing.JTextField jtfTIMKIEM_CT;
    private javax.swing.JTextField jtfTONGTIEN;
    // End of variables declaration//GEN-END:variables
}
