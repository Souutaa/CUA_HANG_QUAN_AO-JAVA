/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import BUS.KhuyenMaiBUS;
import BUS.SanPhamBUS;
import Model.CTCTKM;
import Model.CTKM;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Quang Long
 */
public class KHUYENMAI_VIEW extends javax.swing.JPanel {

    DefaultTableModel tableModelCTKM, tableModelCTCTKM;

    /**
     * Creates new form KHUYENMAI1
     */
    public KHUYENMAI_VIEW() {
        initComponents();
        tableModelCTKM = (DefaultTableModel) jtbCTKM.getModel();
        tableModelCTCTKM = (DefaultTableModel) jtbCTCTKM.getModel();
        showCTKM();
        showCTCTKM();

        jtfTIMKIEMNANGCAO.setEnabled(false);
        jtfTIMKIEMNANGCAO_CTCTKM.setEnabled(false);
        jtfMASP.setEnabled(false);
        btnFrameCHONSP.setEnabled(false);
        btnXOA.setEnabled(false);
    }

    private void showCTKM() {

        KhuyenMaiBUS ctkmBUS = new KhuyenMaiBUS();
        KhuyenMaiBUS.CTKMLIST = ctkmBUS.getAllChuongTrinhKhuyenMai();

        tableModelCTKM.setRowCount(0);

        for (CTKM ctkm : KhuyenMaiBUS.CTKMLIST) {
            Vector<String> row = new Vector<>();
            row.add(ctkm.getMaKM());
            row.add(ctkm.getTenCTKM());
            row.add(ctkm.getNgayBD());
            row.add(ctkm.getNgayKT());

            tableModelCTKM.addRow(row);
        }

        jtbCTKM.setModel(tableModelCTKM);
    }

    private void showCTCTKM() {

        KhuyenMaiBUS ctkmBUS = new KhuyenMaiBUS();
        KhuyenMaiBUS.CTCTKMLIST = ctkmBUS.getAllCT_ChuongTrinhKhuyenMai();

        tableModelCTCTKM.setRowCount(0);

        for (CTCTKM ctctkm : KhuyenMaiBUS.CTCTKMLIST) {
            Vector<String> row = new Vector<>();
            row.add(ctctkm.getMaKM());
            row.add(ctctkm.getPhantram_KM());

            tableModelCTCTKM.addRow(row);
        }

        jtbCTCTKM.setModel(tableModelCTCTKM);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jtfMAKM = new javax.swing.JTextField();
        jtfTENKM = new javax.swing.JTextField();
        jtfNGAYBD = new javax.swing.JTextField();
        jtfNGAYKT = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtfMASP = new javax.swing.JTextField();
        jtfPHANTRAM_KM = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jtfMAKM_CT = new javax.swing.JTextField();
        btnFrameCHONSP = new javax.swing.JButton();
        btnTHEMCTKM = new javax.swing.JButton();
        btnSUA = new javax.swing.JButton();
        btnXOA = new javax.swing.JButton();
        btnRESET = new javax.swing.JButton();
        btnTHEMCT_CTKM = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtbCTCTKM = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jcbTIMKIEMCT_CTKM = new javax.swing.JComboBox<>();
        jtfTIMKIEMCT_CTKM = new javax.swing.JTextField();
        jtfTIMKIEMNANGCAO_CTCTKM = new javax.swing.JTextField();
        btnTIMKIEMCT_CTKM = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbCTKM = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        btnTIMKIEM = new javax.swing.JButton();
        jcbTIMKIEM = new javax.swing.JComboBox<>();
        jtfTIMKIEM = new javax.swing.JTextField();
        jtfTIMKIEMNANGCAO = new javax.swing.JTextField();

        setBackground(new java.awt.Color(210, 145, 188));
        setPreferredSize(new java.awt.Dimension(1500, 700));

        jPanel1.setBackground(new java.awt.Color(255, 200, 231));
        jPanel1.setPreferredSize(new java.awt.Dimension(1450, 725));

        jPanel2.setBackground(new java.awt.Color(244, 194, 215));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/coupon.png"))); // NOI18N
        jLabel1.setText("QUẢN LÝ KHUYẾN MÃI");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(440, 440, 440)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 200, 231));

        jPanel6.setBackground(new java.awt.Color(255, 200, 231));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("THÔNG TIN KHUYẾN MÃI");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("ID KHUYẾN MÃI:");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("TÊN KHUYẾN MÃI:");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("NGÀY BẮT ĐẦU:");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("NGÀY KẾT THÚC:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(254, 254, 254)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(jtfNGAYKT, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfNGAYBD, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
                            .addComponent(jtfMAKM)
                            .addComponent(jtfTENKM))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtfMAKM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jtfTENKM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jtfNGAYBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jtfNGAYKT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 4, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(255, 200, 231));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("CHI TIẾT KHUYẾN MÃI");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("ID SẢN PHẨM:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("%KHUYẾN MÃI:");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel12.setText("ID KHUYẾN MÃI:");

        jtfMAKM_CT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfMAKM_CTMouseClicked(evt);
            }
        });

        btnFrameCHONSP.setText("...");
        btnFrameCHONSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFrameCHONSPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(286, 286, 286)
                        .addComponent(jLabel3))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jtfPHANTRAM_KM))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jtfMASP, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtfMAKM_CT, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFrameCHONSP, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jtfMAKM_CT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfMASP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFrameCHONSP))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtfPHANTRAM_KM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        btnTHEMCTKM.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnTHEMCTKM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/plus-sign.png"))); // NOI18N
        btnTHEMCTKM.setText("THÊM THÔNG TIN");
        btnTHEMCTKM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTHEMCTKMActionPerformed(evt);
            }
        });

        btnSUA.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnSUA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/eraser.png"))); // NOI18N
        btnSUA.setText("SỬA");
        btnSUA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSUAActionPerformed(evt);
            }
        });

        btnXOA.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnXOA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/delete-button.png"))); // NOI18N
        btnXOA.setText("XÓA");
        btnXOA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXOAActionPerformed(evt);
            }
        });

        btnRESET.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnRESET.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/reset.png"))); // NOI18N
        btnRESET.setText("RESET");
        btnRESET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRESETActionPerformed(evt);
            }
        });

        btnTHEMCT_CTKM.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnTHEMCT_CTKM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/plus-sign.png"))); // NOI18N
        btnTHEMCT_CTKM.setText("THÊM CHI TIẾT");
        btnTHEMCT_CTKM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTHEMCT_CTKMActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnTHEMCTKM)
                .addGap(88, 88, 88)
                .addComponent(btnSUA)
                .addGap(84, 84, 84)
                .addComponent(btnXOA)
                .addGap(81, 81, 81)
                .addComponent(btnRESET)
                .addGap(140, 140, 140)
                .addComponent(btnTHEMCT_CTKM)
                .addGap(230, 230, 230))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTHEMCTKM)
                    .addComponent(btnSUA)
                    .addComponent(btnXOA)
                    .addComponent(btnRESET)
                    .addComponent(btnTHEMCT_CTKM))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(244, 194, 215));
        jPanel4.setPreferredSize(new java.awt.Dimension(1500, 300));

        jPanel5.setBackground(new java.awt.Color(244, 194, 215));
        jPanel5.setPreferredSize(new java.awt.Dimension(800, 500));

        jtbCTCTKM.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "MÃ KM", "% KM"
            }
        ));
        jtbCTCTKM.setPreferredSize(new java.awt.Dimension(300, 80));
        jtbCTCTKM.setShowGrid(false);
        jtbCTCTKM.setShowHorizontalLines(true);
        jtbCTCTKM.setShowVerticalLines(true);
        jtbCTCTKM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbCTCTKMMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtbCTCTKM);

        jLabel11.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/file.png"))); // NOI18N
        jLabel11.setText("CHI TIẾT KHUYẾN MÃI");

        jcbTIMKIEMCT_CTKM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mặc định", "%KM" }));
        jcbTIMKIEMCT_CTKM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTIMKIEMCT_CTKMActionPerformed(evt);
            }
        });

        jtfTIMKIEMCT_CTKM.setText("Nhập dữ liệu cần tìm");
        jtfTIMKIEMCT_CTKM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfTIMKIEMCT_CTKMMouseClicked(evt);
            }
        });

        jtfTIMKIEMNANGCAO_CTCTKM.setText("Nhập dữ liệu cần tìm");
        jtfTIMKIEMNANGCAO_CTCTKM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfTIMKIEMNANGCAO_CTCTKMMouseClicked(evt);
            }
        });

        btnTIMKIEMCT_CTKM.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnTIMKIEMCT_CTKM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/web-search-engine.png"))); // NOI18N
        btnTIMKIEMCT_CTKM.setText("TÌM KIẾM");
        btnTIMKIEMCT_CTKM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTIMKIEMCT_CTKMActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(310, 310, 310)
                .addComponent(jLabel11)
                .addGap(141, 141, 141)
                .addComponent(jcbTIMKIEMCT_CTKM, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfTIMKIEMCT_CTKM)
                    .addComponent(jtfTIMKIEMNANGCAO_CTCTKM, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnTIMKIEMCT_CTKM)
                .addGap(463, 463, 463))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jtfTIMKIEMCT_CTKM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jcbTIMKIEMCT_CTKM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jtfTIMKIEMNANGCAO_CTCTKM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGap(2, 2, 2)
                            .addComponent(btnTIMKIEMCT_CTKM))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(335, Short.MAX_VALUE))
        );

        jtbCTKM.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID KM", "Tên KM", "Ngày BD", "Ngày KT"
            }
        ));
        jtbCTKM.setShowGrid(false);
        jtbCTKM.setShowHorizontalLines(true);
        jtbCTKM.setShowVerticalLines(true);
        jtbCTKM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbCTKMMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbCTKM);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/file.png"))); // NOI18N
        jLabel10.setText("THÔNG TIN KHUYẾN MÃI");

        btnTIMKIEM.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnTIMKIEM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/web-search-engine.png"))); // NOI18N
        btnTIMKIEM.setText("TÌM KIẾM");
        btnTIMKIEM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTIMKIEMActionPerformed(evt);
            }
        });

        jcbTIMKIEM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mặc định", "ID KM", "Tên KM", "Ngày BD", "Ngày KT" }));
        jcbTIMKIEM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTIMKIEMActionPerformed(evt);
            }
        });

        jtfTIMKIEM.setText("Nhập dữ liệu cần tìm");
        jtfTIMKIEM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfTIMKIEMMouseClicked(evt);
            }
        });
        jtfTIMKIEM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfTIMKIEMActionPerformed(evt);
            }
        });

        jtfTIMKIEMNANGCAO.setText("Nhập dữ liệu cần tìm");
        jtfTIMKIEMNANGCAO.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfTIMKIEMNANGCAOMouseClicked(evt);
            }
        });
        jtfTIMKIEMNANGCAO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfTIMKIEMNANGCAOActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(307, 307, 307)
                        .addComponent(jLabel10)
                        .addGap(123, 123, 123)
                        .addComponent(jcbTIMKIEM, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfTIMKIEM)
                            .addComponent(jtfTIMKIEMNANGCAO, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnTIMKIEM))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1315, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1677, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel10)
                        .addGap(23, 23, 23))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jtfTIMKIEM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jcbTIMKIEM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfTIMKIEMNANGCAO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(btnTIMKIEM)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1677, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(131, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 838, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnTHEMCTKMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTHEMCTKMActionPerformed
        CTKM ctkm = new CTKM();
        int ktra = 1;
        KhuyenMaiBUS kmBUS = new KhuyenMaiBUS();
        ctkm.setMaKM(jtfMAKM.getText().trim());
        if (jtfMAKM.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Lỗi không được để Mã KM trống", "Lôi", JOptionPane.ERROR_MESSAGE);
        } else {
            for (CTKM makm : KhuyenMaiBUS.CTKMLIST) {
                if (ctkm.getMaKM().equalsIgnoreCase(makm.getMaKM())) {
                    ktra = 0;
                }
            }
            if (ktra == 1) {
                ctkm.setTenCTKM(jtfTENKM.getText().trim());
                ctkm.setNgayBD(jtfNGAYBD.getText().trim());
                ctkm.setNgayKT(jtfNGAYKT.getText().trim());

                try {
                    int result_CTKM = kmBUS.insertCTKM(ctkm);
                    if (result_CTKM != 0) {
                        JOptionPane.showMessageDialog(this,
                                "Thêm dữ liệu thành công!", "Thông báo",
                                JOptionPane.INFORMATION_MESSAGE);
                    }
                    showCTKM();
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Mã KM đã bị trùng lặp do khởi tạo trước đó", "Lôi", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnTHEMCTKMActionPerformed

    private void jtfTIMKIEMNANGCAOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfTIMKIEMNANGCAOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfTIMKIEMNANGCAOActionPerformed

    private void jtfTIMKIEMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfTIMKIEMActionPerformed

    }//GEN-LAST:event_jtfTIMKIEMActionPerformed

    private void btnTIMKIEMCT_CTKMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTIMKIEMCT_CTKMActionPerformed
        String ValueOfFind = jtfTIMKIEMCT_CTKM.getText();
        String ValueOFFind_NangCao = jtfTIMKIEMNANGCAO_CTCTKM.getText();

        List<CTCTKM> kq = new ArrayList<>();
        CTCTKM ctctkm = new CTCTKM();
        KhuyenMaiBUS kmBUS = new KhuyenMaiBUS();
        int pos = jcbTIMKIEMCT_CTKM.getSelectedIndex();
        switch (pos) {
            case 0:
                jtfTIMKIEMCT_CTKM.setText("Nhập dữ liệu tìm kiếm");
                jtfTIMKIEMNANGCAO_CTCTKM.setText("Nhập dữ liệu tìm kiếm");
                showCTCTKM();
                break;
            case 1:

                kq = kmBUS.timTheoPhanTramCT_CTKM(ValueOfFind);
                if (kq.size() == 0) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModelCTCTKM.setRowCount(0);
                    for (CTCTKM ctctkmkq : kq) {
                        Vector<String> row = new Vector<>();
                        row.add(ctctkmkq.getMaKM());
                        row.add(ctctkmkq.getPhantram_KM());
                        tableModelCTCTKM.addRow(row);
                    }
                    jtbCTCTKM.setModel(tableModelCTCTKM);
                }
                break;

            /*         case 2:

                kq = kmBUS.timTheoTenKM(ValueOfFind);
                if (kq.size() == 0) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModelCTKM.setRowCount(0);
                    for (CTKM ctkmkq : kq) {
                        Vector<String> row = new Vector<>();
                        row.add(ctkmkq.getMaKM());
                        row.add(ctkmkq.getTenCTKM());
                        row.add(ctkmkq.getNgayBD());
                        row.add(ctkmkq.getNgayKT());
                        tableModelCTKM.addRow(row);
                    }
                    jtbCTKM.setModel(tableModelCTKM);
                }
                break;

            case 3:
                kq = kmBUS.timTheoNgayBD(ValueOfFind);
                if (kq.size() == 0) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModelCTKM.setRowCount(0);
                    for (CTKM ctkmkq : kq) {
                        Vector<String> row = new Vector<>();
                        row.add(ctkmkq.getMaKM());
                        row.add(ctkmkq.getTenCTKM());
                        row.add(ctkmkq.getNgayBD());
                        row.add(ctkmkq.getNgayKT());
                        tableModelCTKM.addRow(row);
                    }
                    jtbCTKM.setModel(tableModelCTKM);
                }
                break;

            case 4:
                kq = kmBUS.timTheoNgayKT(ValueOfFind);
                if (kq.size() == 0) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModelCTKM.setRowCount(0);
                    for (CTKM ctkmkq : kq) {
                        Vector<String> row = new Vector<>();
                        row.add(ctkmkq.getMaKM());
                        row.add(ctkmkq.getTenCTKM());
                        row.add(ctkmkq.getNgayBD());
                        row.add(ctkmkq.getNgayKT());
                        tableModelCTKM.addRow(row);
                    }
                    jtbCTKM.setModel(tableModelCTKM);
                }
                break;*/
            default:
                break;
        }
    }//GEN-LAST:event_btnTIMKIEMCT_CTKMActionPerformed

    private void jtfMAKM_CTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfMAKM_CTMouseClicked
        jtfMAKM_CT.setText(jtfMAKM.getText());
    }//GEN-LAST:event_jtfMAKM_CTMouseClicked

    private void btnFrameCHONSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFrameCHONSPActionPerformed
        CHONSP_VIEW chonsp_view = new CHONSP_VIEW();
        chonsp_view.setVisible(true);
    }//GEN-LAST:event_btnFrameCHONSPActionPerformed

    private void btnSUAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSUAActionPerformed
        int i = jtbCTKM.getSelectedRow();
        int j = jtbCTCTKM.getSelectedRow();
        int ktraCTKM = 1; //Gia tri dung, khong trung, duoc sua
        int ktraCTCTKM = 1;
        if (i >= 0 && j<0) {
            CTKM ctkm = new CTKM();
            CTKM ctkmold = KhuyenMaiBUS.CTKMLIST.set(i, ctkm);
            if (ktraCTKM == 1) {
                ctkm.setMaKM(jtfMAKM.getText());
                ctkm.setTenCTKM(jtfTENKM.getText());
                ctkm.setNgayBD(jtfNGAYBD.getText());
                ctkm.setNgayKT(jtfNGAYKT.getText());
                KhuyenMaiBUS kmBUS = new KhuyenMaiBUS();
                int kt = kmBUS.updateCTKM(ctkm, ctkmold);
                if (kt != 0) {
                    /*tableModelCTKM.setValueAt(ctkmold.getMaKM(), i, 0);
                    tableModelCTKM.setValueAt(ctkm.getTenCTKM(), i, 1);
                    tableModelCTKM.setValueAt(ctkm.getNgayBD(), i, 2);
                    tableModelCTKM.setValueAt(ctkm.getNgayKT(), i, 3);
                    jtbCTKM.setModel(tableModelCTKM);*/
                    
                    JOptionPane.showMessageDialog(null, "Sửa thành công chương trình khuyến mãi", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    showCTKM();
                } else {
                    JOptionPane.showMessageDialog(null, "Lỗi", "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else if (j >= 0 && i<0) {
            CTCTKM ctctkm = new CTCTKM();
            CTCTKM ctctkmold = KhuyenMaiBUS.CTCTKMLIST.set(j, ctctkm);
            if (ktraCTCTKM == 1) {
                ctctkm.setMaKM(jtfMAKM_CT.getText());
                ctctkm.setPhantram_KM(jtfPHANTRAM_KM.getText());               
                KhuyenMaiBUS kmBUS = new KhuyenMaiBUS();
                int kt = kmBUS.updateCT_CTKM(ctctkm, ctctkmold);
                if (kt != 0) {
                    tableModelCTCTKM.setValueAt(ctctkmold.getMaKM(), j, 0);
                    tableModelCTCTKM.setValueAt(ctctkm.getPhantram_KM(), j, 1);
                    jtbCTCTKM.setModel(tableModelCTCTKM);
                    showCTCTKM();
                    JOptionPane.showMessageDialog(null, "Sửa thành công chi tiết chương trình khuyến mãi", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Lỗi", "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
            }
           //JOptionPane.showMessageDialog(null, "Không được sửa thông tin chi tiết khuyến mãi","Lỗi",JOptionPane.ERROR_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Vui lòng chỉ chọn sửa 1 bảng trong 1 lần thực hiện","Lỗi",JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnSUAActionPerformed

    private void btnXOAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXOAActionPerformed
        KhuyenMaiBUS kmBUS = new KhuyenMaiBUS();
        int selectedIndex = jtbCTCTKM.getSelectedRow();
        if (selectedIndex >= 0) {
            CTCTKM std = KhuyenMaiBUS.CTCTKMLIST.get(selectedIndex);

            int option = JOptionPane.showConfirmDialog(this, "Do you want to delete this item?");

            if (option == 0) {
                kmBUS.deleteCT_CTKM(std.getMaKM());

                showCTCTKM();
            }
        }
    }//GEN-LAST:event_btnXOAActionPerformed

    private void btnRESETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRESETActionPerformed
        jtfMAKM.setText("");
        jtfTENKM.setText("");
        jtfNGAYBD.setText("");
        jtfNGAYKT.setText("");
        jtfMAKM_CT.setText("");
        jtfMASP.setText("");
        jtfPHANTRAM_KM.setText("");
    }//GEN-LAST:event_btnRESETActionPerformed

    private void jtbCTKMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbCTKMMouseClicked
        if (evt.getSource() == jtbCTKM) {
            int i = jtbCTKM.getSelectedRow();

            if (i >= 0) {
                KhuyenMaiBUS kmBUS = new KhuyenMaiBUS();
                CTKM ctkm = new CTKM();

                ctkm = KhuyenMaiBUS.CTKMLIST.get(i);
                jtfMAKM.setText(ctkm.getMaKM());
                jtfTENKM.setText(ctkm.getTenCTKM());
                jtfNGAYBD.setText(ctkm.getNgayBD());
                jtfNGAYKT.setText(ctkm.getNgayKT());

                ArrayList<CTCTKM> kq = new ArrayList<>();
                for (CTCTKM ctctkm : kmBUS.CTCTKMLIST) {
                    if (ctctkm.getMaKM().equalsIgnoreCase(ctkm.getMaKM())) {
                        kq.add(ctctkm);
                    }
                }

                tableModelCTCTKM.setRowCount(0);
                for (CTCTKM ctctkm : kq) {
                    Vector<String> row = new Vector<>();
                    row.add(ctctkm.getMaKM());
                    row.add(ctctkm.getPhantram_KM());

                    tableModelCTCTKM.addRow(row);
                }
                jtbCTCTKM.setModel(tableModelCTCTKM);
            }
        }

    }//GEN-LAST:event_jtbCTKMMouseClicked

    private void jtbCTCTKMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbCTCTKMMouseClicked
        if (evt.getSource() == jtbCTCTKM) {
            int i = jtbCTCTKM.getSelectedRow();

            if (i >= 0) {
                KhuyenMaiBUS kmBUS = new KhuyenMaiBUS();
                //SANPHAM_VIEW sp_view = new SANPHAM_VIEW();
                CTCTKM ctctkm = new CTCTKM();
                //CTKM ctkm = new CTKM();
                //tableModelCTCTKM.getValueAt(i, 1);
                jtfMAKM_CT.setText(jtfMAKM.getText());
                String MAKM = String.valueOf(tableModelCTCTKM.getValueAt(i, 0));
                String MASP = String.valueOf(tableModelCTCTKM.getValueAt(i, 1));
                String PhanTram = String.valueOf(tableModelCTCTKM.getValueAt(i, 2));

                jtfMAKM_CT.setText(MAKM);
                jtfMASP.setText(MASP);
                jtfPHANTRAM_KM.setText(PhanTram);
                //ctctkm = KhuyenMaiBUS.CTCTKMLIST.get(i);
                //jtfMAKM_CT.setText(ctctkm.getMaKM());
                //jtfMASP.setText(ctctkm.getMaSP());
                //jtfPHANTRAM_KM.setText(ctctkm.getPhantram_KM());

                btnXOA.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jtbCTCTKMMouseClicked

    private void jcbTIMKIEMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTIMKIEMActionPerformed
        if (jcbTIMKIEM.getSelectedItem().equals("Mặc Định")) {
            //jtfTIMKIEMNANGCAO.setEnabled(true);
            jtfTIMKIEM.setText("Nhập dữ liệu tìm kiếm");
        } else {
            jtfTIMKIEM.setText("Nhập dữ liệu tìm kiếm");
            jtfTIMKIEMNANGCAO.setText("Nhập dữ liệu tìm kiếm");
            //jtfTIMKIEMNANGCAO.setEnabled(false);
        }
    }//GEN-LAST:event_jcbTIMKIEMActionPerformed

    private void jcbTIMKIEMCT_CTKMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTIMKIEMCT_CTKMActionPerformed
        if (jcbTIMKIEMCT_CTKM.getSelectedItem().equals("Mặc Định")) {
            //jtfTIMKIEMNANGCAO.setEnabled(true);
            jtfTIMKIEMCT_CTKM.setText("Nhập dữ liệu tìm kiếm");
        } else {
            jtfTIMKIEMCT_CTKM.setText("Nhập dữ liệu tìm kiếm");
            jtfTIMKIEMNANGCAO_CTCTKM.setText("Nhập dữ liệu tìm kiếm");
            //jtfTIMKIEMNANGCAO.setEnabled(false);
        }
    }//GEN-LAST:event_jcbTIMKIEMCT_CTKMActionPerformed

    private void jtfTIMKIEMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfTIMKIEMMouseClicked
        jtfTIMKIEM.setText("");
    }//GEN-LAST:event_jtfTIMKIEMMouseClicked

    private void jtfTIMKIEMCT_CTKMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfTIMKIEMCT_CTKMMouseClicked
        jtfTIMKIEMCT_CTKM.setText("");
    }//GEN-LAST:event_jtfTIMKIEMCT_CTKMMouseClicked

    private void jtfTIMKIEMNANGCAOMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfTIMKIEMNANGCAOMouseClicked
        jtfTIMKIEMCT_CTKM.setText("");
    }//GEN-LAST:event_jtfTIMKIEMNANGCAOMouseClicked

    private void jtfTIMKIEMNANGCAO_CTCTKMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfTIMKIEMNANGCAO_CTCTKMMouseClicked
        jtfTIMKIEMNANGCAO_CTCTKM.setText("");
    }//GEN-LAST:event_jtfTIMKIEMNANGCAO_CTCTKMMouseClicked

    private void btnTIMKIEMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTIMKIEMActionPerformed
        String ValueOfFind = jtfTIMKIEM.getText();
        String ValueOFFind_NangCao = jtfTIMKIEMNANGCAO.getText();

        List<CTKM> kq = new ArrayList<>();
        CTKM ctkm = new CTKM();
        KhuyenMaiBUS kmBUS = new KhuyenMaiBUS();
        int pos = jcbTIMKIEM.getSelectedIndex();
        switch (pos) {
            case 0:
                jtfTIMKIEM.setText("Nhập dữ liệu tìm kiếm");
                jtfTIMKIEMNANGCAO.setText("Nhập dữ liệu tìm kiếm");
                showCTKM();
                break;
            case 1:

                ctkm = kmBUS.timTheoMaCTKM(ValueOfFind);
                if (ctkm == null) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModelCTKM.setRowCount(0);

                    Vector<String> row = new Vector<>();
                    row.add(ctkm.getMaKM());
                    row.add(ctkm.getTenCTKM());
                    row.add(ctkm.getNgayBD());
                    row.add(ctkm.getNgayKT());
                    tableModelCTKM.addRow(row);

                    jtbCTKM.setModel(tableModelCTKM);
                }
                break;

            case 2:

                kq = kmBUS.timTheoTenKM(ValueOfFind);
                if (kq.size() == 0) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModelCTKM.setRowCount(0);
                    for (CTKM ctkmkq : kq) {
                        Vector<String> row = new Vector<>();
                        row.add(ctkmkq.getMaKM());
                        row.add(ctkmkq.getTenCTKM());
                        row.add(ctkmkq.getNgayBD());
                        row.add(ctkmkq.getNgayKT());
                        tableModelCTKM.addRow(row);
                    }
                    jtbCTKM.setModel(tableModelCTKM);
                }
                break;

            case 3:
                kq = kmBUS.timTheoNgayBD(ValueOfFind);
                if (kq.size() == 0) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModelCTKM.setRowCount(0);
                    for (CTKM ctkmkq : kq) {
                        Vector<String> row = new Vector<>();
                        row.add(ctkmkq.getMaKM());
                        row.add(ctkmkq.getTenCTKM());
                        row.add(ctkmkq.getNgayBD());
                        row.add(ctkmkq.getNgayKT());
                        tableModelCTKM.addRow(row);
                    }
                    jtbCTKM.setModel(tableModelCTKM);
                }
                break;

            case 4:
                kq = kmBUS.timTheoNgayKT(ValueOfFind);
                if (kq.size() == 0) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModelCTKM.setRowCount(0);
                    for (CTKM ctkmkq : kq) {
                        Vector<String> row = new Vector<>();
                        row.add(ctkmkq.getMaKM());
                        row.add(ctkmkq.getTenCTKM());
                        row.add(ctkmkq.getNgayBD());
                        row.add(ctkmkq.getNgayKT());
                        tableModelCTKM.addRow(row);
                    }
                    jtbCTKM.setModel(tableModelCTKM);
                }
                break;

            /*           case 5:
                kq = nvBUS.timTheoDiaChivaNgaySinh(ValueOfFind, ValueOFFind_NangCao);
                if (kq.size() == 0) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModel.setRowCount(0);
                    for (NHANVIEN nhanvienkq : kq) {
                        Vector<String> row = new Vector<>();
                        row.add(nhanvienkq.getMaNV());
                        row.add(nhanvienkq.getTenNV());
                        row.add(nhanvienkq.getSDT_NV());
                        row.add(nhanvienkq.getNgaySinh_NV());
                        row.add(nhanvienkq.getDiaChi_NV());
                        tableModel.addRow(row);
                    }
                    jtbNHANVIEN.setModel(tableModel);
                }
                break;

            case 6:
                kq = nvBUS.timTheoDiaChihoacNgaySinh(ValueOfFind);
                if (kq.size() == 0) {
                    JOptionPane.showMessageDialog(this, "lỗi");
                } else {
                    tableModel.setRowCount(0);
                    for (NHANVIEN nhanvienkq : kq) {
                        Vector<String> row = new Vector<>();
                        row.add(nhanvienkq.getMaNV());
                        row.add(nhanvienkq.getTenNV());
                        row.add(nhanvienkq.getSDT_NV());
                        row.add(nhanvienkq.getNgaySinh_NV());
                        row.add(nhanvienkq.getDiaChi_NV());
                        tableModel.addRow(row);
                    }
                    jtbNHANVIEN.setModel(tableModel);
                }
                break; */
            default:
                break;
        }
    }//GEN-LAST:event_btnTIMKIEMActionPerformed

    private void btnTHEMCT_CTKMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTHEMCT_CTKMActionPerformed
        int ktra = 1;
        int ktraMaKM_tontai_CTKM = 0;
        CTCTKM ctctkm = new CTCTKM();
        KhuyenMaiBUS kmBUS = new KhuyenMaiBUS();

        ctctkm.setMaKM(jtfMAKM_CT.getText().trim());

        if (jtfMAKM_CT.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Lỗi không được để Mã KM chi tiết trống", "Lôi", JOptionPane.ERROR_MESSAGE);
        } else {
            for (CTCTKM km : KhuyenMaiBUS.CTCTKMLIST) {
                if (ctctkm.getMaKM().equalsIgnoreCase(km.getMaKM())) {
                    ktra = 0;
                }
            }
            if (ktra == 1) {
                for (CTKM ctkm : KhuyenMaiBUS.CTKMLIST) {
                    if (ctctkm.getMaKM().equalsIgnoreCase(ctkm.getMaKM())) {
                        ktraMaKM_tontai_CTKM = 1;
                    }
                }
                if (ktraMaKM_tontai_CTKM == 1) {
                    ctctkm.setPhantram_KM(jtfPHANTRAM_KM.getText().trim());
                    try {
                        int result_CTCTKM = kmBUS.insertCT_CTKM(ctctkm);
                        if (result_CTCTKM != 0) {
                            JOptionPane.showMessageDialog(this,
                                    "Thêm dữ liệu thành công!", "Thông báo",
                                    JOptionPane.INFORMATION_MESSAGE);
                        }
                        showCTCTKM();
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Mã KM này không tồn tại để khởi tạo", "Lôi", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Mã KM đã bị trùng lặp do khởi tạo trước đó", "Lôi", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnTHEMCT_CTKMActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFrameCHONSP;
    private javax.swing.JButton btnRESET;
    private javax.swing.JButton btnSUA;
    private javax.swing.JButton btnTHEMCTKM;
    private javax.swing.JButton btnTHEMCT_CTKM;
    private javax.swing.JButton btnTIMKIEM;
    private javax.swing.JButton btnTIMKIEMCT_CTKM;
    private javax.swing.JButton btnXOA;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> jcbTIMKIEM;
    private javax.swing.JComboBox<String> jcbTIMKIEMCT_CTKM;
    private javax.swing.JTable jtbCTCTKM;
    private javax.swing.JTable jtbCTKM;
    private javax.swing.JTextField jtfMAKM;
    private javax.swing.JTextField jtfMAKM_CT;
    public static javax.swing.JTextField jtfMASP;
    private javax.swing.JTextField jtfNGAYBD;
    private javax.swing.JTextField jtfNGAYKT;
    private javax.swing.JTextField jtfPHANTRAM_KM;
    private javax.swing.JTextField jtfTENKM;
    private javax.swing.JTextField jtfTIMKIEM;
    private javax.swing.JTextField jtfTIMKIEMCT_CTKM;
    private javax.swing.JTextField jtfTIMKIEMNANGCAO;
    private javax.swing.JTextField jtfTIMKIEMNANGCAO_CTCTKM;
    // End of variables declaration//GEN-END:variables
}
